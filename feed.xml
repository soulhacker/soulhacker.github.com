<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Paradigm X</title>
        <description>All those innovative, insightful, intelligent, intriguing things.</description>
        <link>http://cn.soulhacker.me/</link>
        <atom:link href="http://cn.soulhacker.me/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Thu, 08 Jun 2017 17:33:00 +0800</pubDate>
        <lastBuildDate>Thu, 08 Jun 2017 17:33:00 +0800</lastBuildDate>
        <generator>Jekyll v2.4.0</generator>
        
            <item>
                <title>Freddie Mercury</title>
                <description>&lt;p&gt;Freddie Mercury 是一个教科书一般的摇滚或者说流行文化传奇：独特的艺术风格，空前绝后的舞台表演，来到和离开这个世界的方式… 我并无意去写一篇他的传记——已经有很多类似的东西了——只想记录下这位 Queen 主唱留在我心里的一些零星记忆碎片，分享给有兴趣的朋友。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;出身&lt;/h2&gt;

&lt;p&gt;可能很多人最初会觉得有点意外，Freddie Mercury 其实是亚裔，他 1946 年出生于东非的桑给巴尔苏丹国（Sultanate of Zanzibar），父母都是帕西人（Parsis），即 8-10 世纪拒绝伊斯兰化而移居印度的波斯人。&lt;/p&gt;

&lt;p&gt;Freddie 在桑给巴尔生活到 17 岁，因为桑给巴尔革命爆发，在英殖民政府工作的父亲想办法把全家搬回了英格兰。在整个青少年期，Freddie 受的都是标准的英式教育，7 岁就开始学钢琴，喜爱英国 50 年代流行乐（比如 Cliff Richard 和 Little Richard），12 岁在学校里组建了自己的乐队（叫 “The Hectics”），所以是的，影响人一生的兴趣和天赋基本在 16 岁以前就确定了。&lt;/p&gt;

&lt;p&gt;到了英国之后，Freddie 继续尝试自己的组团事业——都不怎么顺利，直到 24 岁时遇见吉他手 Brian May 和鼓手 Roger Taylor，三人组成了真正的铁三角（直到终极影响——死亡将他们分开），1971 年贝斯手 John Deacon 加入，Freddie 把自己的姓氏从 Bulsara 改成了 Mercury，也把乐队的名字从 “Smile” 改成了 “Queen”。&lt;/p&gt;

&lt;h2&gt;波西米亚狂想曲&lt;/h2&gt;

&lt;p&gt;Bohemian Rhapsody（&lt;a href=&quot;https://itunes.apple.com/us/album/bohemian-rhapsody/id930321179?i=930321200&quot;&gt;iTunes&lt;/a&gt; / &lt;a href=&quot;https://music.163.com/#/song?id=471969753&quot;&gt;网易云音乐&lt;/a&gt;）出自 Queen 的第四张录音室专辑 &lt;a href=&quot;https://en.wikipedia.org/wiki/A_Night_at_the_Opera_(Queen_album)&quot;&gt;A Night at the Opera&lt;/a&gt;，由 Freddie Mercury 创作，也是专辑的点睛之笔。这首长约六分钟的摇滚歌剧可以划分为引子、抒情曲、吉他独奏、歌剧、硬摇滚和尾声六个部分，结构和和声都极其复杂，被普遍认为是当时世界上制作最昂贵的一支单曲。&lt;/p&gt;

&lt;p&gt;这首歌的意义非凡，它是 Freddie 和 Queen 第一次对“摇滚+古典音乐”深度融合的探索，并取得了巨大的商业成功，这和 Freddie 极具天赋的嗓音是分不开的。Freddie 拥有非常宽广的音域（从男低音 F2 到女高音 F6 的四个八度，真声最高可到男高音的 F5），但和传统男高音不一样，他的嗓音具有未经雕琢的摇滚味道，而且在音乐节奏感上比大多数摇滚歌手更精细，像这样能完美游走于经典男声和摇滚呐喊之间的例子几乎是空前绝后的，在他生命的最后阶段，这种融合几臻化境。&lt;/p&gt;

&lt;h2&gt;舞台之王&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;right&quot; src=&quot;/images/posts/freddie/live-in-white-vest.jpg&quot; width=&quot;160&quot; /&gt;
Queen 一直被看做是一支拥有神级现场的乐队，Brian May 是一位极具天赋的吉他大师（在滚石杂志的 &lt;a href=&quot;http://www.rollingstone.com/music/lists/100-greatest-guitarists-20111123/brian-may-20111122&quot;&gt;一百位最伟大吉他手&lt;/a&gt; 列表中排名 26），能在任何演出环境下确保音乐品质，而 Freddie 则是 Queen 华丽台风的定义者。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;left&quot; src=&quot;/images/posts/freddie/live-in-yellow-jacket.jpg&quot; width=&quot;240&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Queen 有过非常多经典的现场表演，如果想最快时间里体会一下，我要推荐 1985 年在伦敦温布利球场的 &lt;a href=&quot;https://www.youtube.com/watch?v=A22oy8dFjqc&quot;&gt;LIVE AID 活动上的表演&lt;/a&gt;，这场表演云集了当时如日中天的一众巨星：U2、David Bowie、the Who、Elton John、Dire Straits、Paul McCartney、Sting、Phil Collins… 这里面随便一个都比当时的 Queen 更具人气，然而 Freddie 和 Queen 在大约 25 分钟内表演了七首曲目（外加 Freddie 招牌式的 “Ah-oh” 片段），超越了所有同台的巨星，成为那场演唱会最耀眼的片段，在之后三十年都为人们所津津乐道，乐队自己也认为这是乐队历史上最顶峰的时刻。由于现场表演的限制，无法还原 Queen 作品中大量采用的多轨合成和声（Freddie 一个人唱出两个或者更多声部然后后期合成起来），所以表演中大多曲目进行了删减和修改，但总体表现力依然惊人的完美。Freddie 在这场表演中穿着上图（已成为他招牌的）白色背心和臂环，弹奏钢琴或（更多时候）手持话筒杆在舞台上跳跃，无论是演唱还是与观众的互动都几近完美。对了，其中那首 Radio Ga Ga（&lt;a href=&quot;https://itunes.apple.com/us/album/radio-ga-ga/id932648190?i=932648807&quot;&gt;iTunes&lt;/a&gt; / &lt;a href=&quot;https://music.163.com/#/song?id=1868380&quot;&gt;网易云音乐&lt;/a&gt;）就是 Lady Gaga 给自己取这个艺名的灵感来源。&lt;/p&gt;

&lt;h2&gt;大伪装者&lt;/h2&gt;

&lt;p&gt;在 Freddie 在世的日子里，Queen 的活动从未中断，四位主要成员也从未离队，但 Freddie 还是利用机会制作了一些自己的独唱作品，很多都是个人兴趣尝试，其中非常特别也非常成功的是这首 The Great Pretender（&lt;a href=&quot;https://itunes.apple.com/us/album/the-great-pretender/id204797072?i=204797077&quot;&gt;iTunes&lt;/a&gt; / &lt;a href=&quot;https://music.163.com/#/song?id=18317231&quot;&gt;网易云音乐&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;left&quot; src=&quot;/images/posts/freddie/the-great-pretender.jpg&quot; width=&quot;240&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这首歌是极少数非 Freddie 原创的热门作品，它的原作者是美国黑人乐队 The Platters，这支乐队并不为国人熟知，但是他们有一首尽人皆知的名作 ~Only~You~（为什么脑海里响起的是&lt;a href=&quot;https://www.youtube.com/watch?v=LLCR4b10_X4&quot;&gt;罗家英的声音&lt;/a&gt;…&lt;/p&gt;

&lt;p&gt;这首歌有两个版本的 MV，一个是三分半钟的&lt;a href=&quot;https://www.youtube.com/watch?v=mLRjFWDGs1g&quot;&gt;标准版本&lt;/a&gt;，另一个是穿插加入了花絮片段的六分钟&lt;a href=&quot;https://www.youtube.com/watch?v=ly-JZowFHDA&quot;&gt;扩展版本&lt;/a&gt;。在 MV 中 Freddie 剃掉了他标志性的小胡子（简直像换了一个人，见图），MV 中展示了了很多 Freddie 的经典影像，还有和两个好朋友（Peter Straker 和 Roger Taylor）一起的女装秀… 第一次听这首歌时惊叹 Freddie 演绎这种甜腻腻的歌曲也能如此完美，真是 “great pretender”，Freddie 某次接受采访时提到这首歌很好的概括了他“对自己职业生涯和舞台表演的自我思考”。&lt;/p&gt;

&lt;h2&gt;巴塞罗那&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;right&quot; src=&quot;/images/posts/freddie/barcelona-1.jpg&quot; width=&quot;240&quot; /&gt;
从 波西米亚狂想曲 开始，所有人都看到了 Freddie 对于歌剧的偏好，他也一直毫不隐瞒自己与歌剧大师同台表演的期待，而且非常喜欢西班牙歌剧女高音蒙特赛拉特·卡芭叶（Montserrat Caballé），卡芭叶在上世纪 60 年代就被视为卡拉丝（&lt;a href=&quot;https://en.wikipedia.org/wiki/Maria_Callas&quot;&gt;Maria Callas&lt;/a&gt;，Apple 的 &lt;a href=&quot;https://www.youtube.com/watch?v=GEPhLqwKo6g&quot;&gt;Think Different&lt;/a&gt; 广告中出现过的传奇女高音）的接班人，到 80 年代已是公认的女高音第一人，Freddie 在某次电视节目里表达了对卡芭叶的仰慕之后得到后者的召见，两人据说谈的十分投机，为之后的合作打下了基础。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;left&quot; src=&quot;/images/posts/freddie/barcelona-2.jpg&quot; width=&quot;240&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1987 年巴塞罗那中选 1992 年奥林匹克夏季运动会，组委会邀请恰为巴塞罗那人的卡芭叶为运动会创作一首主题歌，卡芭叶想到了 Freddie 并把这个任务交给了他，Freddie 无比重视这个任务，不仅创作了这首 Barcelona（&lt;a href=&quot;https://itunes.apple.com/us/album/barcelona/id204797072?i=204797641&quot;&gt;iTunes&lt;/a&gt; / &lt;a href=&quot;https://music.163.com/#/song?id=5208619&quot;&gt;网易云音乐&lt;/a&gt;），还迁就卡芭叶的时间表，先录制好所有自己的部分再与卡芭叶合唱，在这首歌中双方的表现都堪称完美，塑造了流芳百世的经典。&lt;/p&gt;

&lt;p&gt;这首歌堪称摇滚和歌剧混搭的教科书，在音乐层面融合了摇滚冲击力和歌剧的优雅及气场，卡芭叶专注于用她极具张力的歌声制造音乐背景和氛围（她的歌词混杂了西班牙语和英语，非常难于辨认），而 Freddie 担负真正的“演唱”任务，唱出充满意境和力量的歌词，&lt;/p&gt;

&lt;p&gt;这首歌有一支&lt;a href=&quot;https://www.youtube.com/watch?v=o8Eg-mWdDLc&quot;&gt;美不胜收的 MV&lt;/a&gt;，也有好几个&lt;a href=&quot;https://www.youtube.com/watch?v=pPG5DP2RQZk&quot;&gt;现场演唱&lt;/a&gt;的版本，都非常精彩。顺便，这首歌的 MV 里的 Freddie 也是“无小胡子版”的。&lt;/p&gt;

&lt;h2&gt;最后致意&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;left&quot; src=&quot;/images/posts/freddie/the-last-bow-1.jpg&quot; width=&quot;240&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1990 年 Queen 获得 Brit Award 的年度杰出贡献奖，这是 Freddie Mercury 在 1991 年因艾滋病并发症去世前的最后一次公开亮相。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;right&quot; src=&quot;/images/posts/freddie/the-last-bow-2.jpg&quot; width=&quot;160&quot; /&gt;&lt;/p&gt;

&lt;p&gt;颁奖礼中乐队四人鱼贯而入，但出人意料的是 Brian May 代表乐队发表了致辞——这一般是作为乐队 frontman 的 Freddie 的工作——而 Freddie 只是在最后说了两句话：“Thank you. Good night!”&lt;/p&gt;

&lt;p&gt;Freddie 可能早在 1987 年就查出艾滋病阳性，但只有极少数人知道这个确切的信息，包括他曾经的异性伴侣、被他称为唯一“真正朋友”的 Mary Austin（Freddie 还是她长子的教父）和 Queen 乐队的成员。病情在 1990 开始恶化，到了 1991 年 Freddie 决定停止治疗，11 月 22 日他请来乐队经理 Jim Beach，告知将要发布一则公告，公开自己的病情，并解释出于对自己和身边人的隐私考虑而隐瞒病情的原因。两天后 Freddie 与世长辞。他是历史上第一位公开患艾滋病及去世的主流摇滚巨星，此后 Queen 和整个摇滚音乐界一起对艾滋病投入了巨大关注，推动了为艾滋病防治集资和公平对待艾滋病患者的一系列行动，至今不衰。&lt;/p&gt;

&lt;p&gt;Freddie 去世之后，依其遗言将自己的房产给了 Mary Austin，留给自己的司机 10 万英镑，他的厨师 Joe Fanelli、私人助理 Peter Freestone 和他的同行伴侣 Jim Huton 各获得 50 万英镑而其余则留给父母。Jim Huton 在 2000 年参与了关于 Freddie 的纪录片 “&lt;a href=&quot;https://www.youtube.com/watch?v=4eoxknrfBZ8&amp;amp;t=1s&quot;&gt;Freddie Mercury, the Untold Story&lt;/a&gt;” 的录制，于 2010 年因癌症去世。&lt;/p&gt;

&lt;h2&gt;天堂制造&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;right&quot; src=&quot;/images/posts/freddie/made-in-heaven-1.jpg&quot; width=&quot;160&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1990 年的某个时候开始 Freddie 已经感觉到自己可能活不了太久了，他和 Queen 的伙伴开始尽可能的录制更多的歌声，希望能够攒够一张专辑的素材，他对伙伴说：“随便给我任何东西，任何我可以唱的东西。”&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;left&quot; src=&quot;/images/posts/freddie/statue-by-lake-geneva-1.jpg&quot; width=&quot;160&quot; /&gt;
在 Freddie 去世后四年，这张混合了 Freddie 最后创作和生前一些作品重新混音的专辑以 Made In Heaven（&lt;a href=&quot;https://itunes.apple.com/us/album/made-in-heaven/id930202183&quot;&gt;iTunes&lt;/a&gt; / &lt;a href=&quot;https://music.163.com/#/album?id=35338730&quot;&gt;网易云音乐&lt;/a&gt;）的标题发行，其中 Mother Love 这首歌是 Freddie 录制的最后歌声，因为身体原因无法完成的部分人声在他去世后由 Brian May 补上。这张充满生命力量的专辑完全配得上这个炫目的标题，作为华丽摇滚最杰出的代表，Freddie 即使在去世四年后仍和他的朋友们为自己的人生画上了一个最华丽的句号。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;right&quot; src=&quot;/images/posts/freddie/statue-by-lake-geneva-3.jpg&quot; width=&quot;240&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这张专辑封面上酷似 Freddie 本人的背影来自日内瓦湖畔的 Freddie Mercury 纪念雕像（上图），雕像穿着他标志性的夹克，还有他标志性的右手上举动作和无底座话筒杆，专辑中有乐队其余三人在一旁拍摄的真人与雕像融为一体的照片，专辑发行后，也经常有人来这里拍摄留念。&lt;/p&gt;

&lt;p&gt;最后，本文提到的歌曲都可以在&lt;a href=&quot;http://music.163.com/#/playlist/752377142&quot;&gt;这个歌单&lt;/a&gt;里找到（还包括一些没提到的）。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/freddie/made-in-heaven-2.jpg&quot; width=&quot;480&quot; /&gt;&lt;/p&gt;
</description>
                <pubDate>Thu, 08 Jun 2017 11:18:50 +0800</pubDate>
                <link>http://cn.soulhacker.me/2017/06/08/freddie-mercury/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2017/06/08/freddie-mercury/</guid>
                
                
            </item>
        
            <item>
                <title>我又装了一次机</title>
                <description>&lt;p&gt;如题，我又装了一次机。意思是，我自己攒了一台组装电脑，然后自己装了系统，不是一个，而是 Windows 和 Linux 俩。上一次干类似的事大约是 2004 年。&lt;/p&gt;

&lt;p&gt;总的感想是：这个行业虽然算不上“一日千里”，但十几年的时间还是改变了不少东西：Windows 再也不是那个每次重启都有可能起不来的玩意儿，Linux 再也不是要折腾一天才能访问中文网站并差强人意地播放音视频的怪兽。然而也有些事情似乎永远也不会变，比如 Mac 无论多么优雅强大，显卡以及显卡的驱动永远跟不上时代——这也是我这次装机的动机：我要深度（wán）学（yóu）习（xì）啊！&lt;/p&gt;

&lt;p&gt;本着 &lt;em&gt;一步到位&lt;/em&gt; 和 &lt;em&gt;安静小巧&lt;/em&gt; 两大原则，装机配置如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CPU：&lt;a href=&quot;https://item.jd.com/1748176.html&quot;&gt;Intel i7-6700k&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;主板：&lt;a href=&quot;https://item.jd.com/2389154.html&quot;&gt;ASUS Z170I PRO GAMING (Intel Z170/LGA 1151)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;内存：&lt;a href=&quot;https://item.jd.com/2966629.html&quot;&gt;CORSAIR Vengeance LED DDR4 3000 32GB (16Gx2)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;显卡：&lt;a href=&quot;https://item.jd.com/3076376.html&quot;&gt;GIGABYTE GTX1080 G1 GAMING 8GD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;存储：&lt;a href=&quot;https://item.jd.com/4173866.html&quot;&gt;Samsung 960 EVO 1TB M.2 NVMe&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;显示器：&lt;a href=&quot;https://item.jd.com/1287970.html&quot;&gt;Dell P2715Q&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;机箱：&lt;a href=&quot;https://item.jd.com/2902818.html&quot;&gt;JONSBO VR1 Mini-ITX&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;电源：&lt;a href=&quot;https://item.jd.com/855414.html&quot;&gt;Seasonic X-750&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;散热器：&lt;a href=&quot;https://item.jd.com/2248473.html&quot;&gt;NOCTUA NH-U9S&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;p&gt;因为核心动机锁定了 GTX1080 和 4K 显示，所以其他配套上就完了，最后正好两万以下搞定（嗯我知道电源有点 overkill…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;吐槽时间&lt;/strong&gt;：在一个早就没了光驱的时代，华硕和技嘉还是选择光盘来提供驱动和工具，理解不能。&lt;/p&gt;

&lt;p&gt;操作系统方面，Windows 没啥好说的，装系统、升级系统、装 Battle.net、装 Steam、装 Origin（对不起你就是台游戏机 (⊙﹏⊙)b&lt;/p&gt;

&lt;p&gt;简单扫了下网上的资料，发现搞科学计算和人工智能的人都不折腾，所以就 &lt;a href=&quot;http://releases.ubuntu.com/16.04/&quot;&gt;Ubuntu 16.04 LTS&lt;/a&gt; 了，然后装 NVIDIA 驱动、装 CUDA 和 cuDNN、装 TensorFlow…这个流程里有些 tricky 的陷阱，浪费了我大半天，最后找到的最简单有效的路径如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;对较新主板的 BIOS（UEFI）和 16.04 LTS，&lt;a href=&quot;https://wiki.ubuntu.com/SecurityTeam/SecureBoot&quot;&gt;Secure Boot&lt;/a&gt; 会阻止加载第三方硬件驱动，有两个选择：简单粗暴的禁用它（Ubuntu 安装程序有提示），或者对第三方驱动进行签名授信，本着不折腾的原则，我直接安装时就把它禁了…&lt;/li&gt;
  &lt;li&gt;下载 &lt;a href=&quot;https://developer.nvidia.com/cuda-downloads&quot;&gt;CUDA Toolkit 8.0&lt;/a&gt;，这个页面上针对 Ubuntu 有四个可选的下载选项，其中最好的选项是“deb (network)” 这个，别的都是坑…&lt;/li&gt;
  &lt;li&gt;安装这个包并更新索引：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;sudo dpkg -i cuda-repo-ubuntu1604_8.0.61-1_amd64.deb
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;sudo apt update&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;这个时候去 Ubuntu 的系统设置里打开 Software &amp;amp; Updates，在 Additional Drivers 下面可以看到最新 NVIDIA 驱动的选项，选之，会自动安装好，之后需要重启，这个方法可以避开一大堆手工操作的麻烦，是这次装 Ubuntu 感觉比以前进步最大的一点。&lt;/li&gt;
  &lt;li&gt;然后就可以风平浪静的：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;sudo apt-get install cuda&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;下载 &lt;a href=&quot;https://developer.nvidia.com/cudnn&quot;&gt;cuDNN&lt;/a&gt; 并安装：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;tar xvzf cudnn-8.0-linux-x64-v5.1.tgz
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;sudo cp cuda/include/cudnn.h /usr/local/cuda/include/
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64/&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;TensorFlow 的主站点被墙，所以需要科学上网，或者用国内的镜像站，比如 &lt;a href=&quot;https://mirror.tuna.tsinghua.edu.cn/help/tensorflow/&quot;&gt;这里&lt;/a&gt;，具体安装推荐用 virtualenv 或者 &lt;a href=&quot;https://www.continuum.io/downloads&quot;&gt;Anaconda&lt;/a&gt; 环境都可以：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;code-highlight-figure&quot;&gt;&lt;div class=&quot;code-highlight&quot;&gt;&lt;pre class=&quot;code-highlight-pre&quot;&gt;&lt;div data-line=&quot;1&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TF_BINARY_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://mirrors.tuna.tsinghua.edu.cn/tensorflow/linux/gpu/tensorflow_gpu-1.0.0-cp27-none-linux_x86_64.whl
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;2&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;3&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;c&quot;&gt;# virtualenv&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;4&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install python-pip python-dev python-virtualenv
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;5&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;virtualenv --system-site-packages ~/tensorflow
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;6&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/tensorflow/bin/activate
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;7&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tensorflow&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install --upgrade &lt;span class=&quot;nv&quot;&gt;$TF_BINARY_URL&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;8&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;9&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Anaconda&lt;/span&gt;
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;10&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda create -n tensorflow
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;11&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;activate tensorflow
&lt;/div&gt;&lt;/div&gt;&lt;div data-line=&quot;12&quot; class=&quot;code-highlight-row numbered&quot;&gt;&lt;div class=&quot;code-highlight-line&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tensorflow&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install --ignore-installed --upgrade &lt;span class=&quot;nv&quot;&gt;$TF_BINARY_URL&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;最后…图。因为我的显卡是晚了两天到的，所以先装了其他部分用集显启动装的 Windows：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-01-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-02-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-03-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-04-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-05-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;毕竟这么多年了，看到这个画面还是舒了口气：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-06-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后显卡来了…&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-07-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-08-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-09-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;回家把服役七年的 iMac 抱到客厅安置好，收拾干净的书桌：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-10-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;闪亮登场：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-11-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我的 MBP 更没位置放了…&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/system-photo-12-small.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Windows 10 桌面：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/desktop-win10.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ubuntu 桌面：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/desktop-ubuntu.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;按照 TensorFlow 的例子画了个 Mandelbrot 集，话说当年在大学写的第一个 Pascal 程序也是画的这个，这算是轮回么……&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/zion/mandelbrot.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;
</description>
                <pubDate>Mon, 27 Feb 2017 17:09:30 +0800</pubDate>
                <link>http://cn.soulhacker.me/2017/02/27/my-new-pc/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2017/02/27/my-new-pc/</guid>
                
                <category>Programming</category>
                
                
            </item>
        
            <item>
                <title>软件开发外传（三篇）</title>
                <description>&lt;h2&gt;编程之禅&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;

&lt;figure class=&quot;quote&quot;&gt;&lt;blockquote&gt;&lt;p&gt;听到一阵骚乱，编程大师走进学徒的小隔间。&lt;/p&gt;

&lt;p&gt;“这些该死的电脑！” 学徒正在怒吼，“为了让它们干点事儿我就要用上三、四种编辑器，他们经常把我搞晕，一发晕我就把整个文件都删了，这完全无法忍受啊！”&lt;/p&gt;

&lt;p&gt;编程大师注视着学徒，“那么你打算怎么拯救自己呢？”&lt;/p&gt;

&lt;p&gt;学徒思考了一会儿，答道：“我要开发一个全新的编辑器，一个完美的编辑器换掉所有其他的！”&lt;/p&gt;

&lt;p&gt;编程大师突然出手敲了学徒脑袋一下，不是很重，但是学徒还是吓了一大跳，“您为什么要打我…”&lt;/p&gt;

&lt;p&gt;“我一点儿也不想再多学一种编辑器。”大师答道。&lt;/p&gt;

&lt;p&gt;突然之间，学徒明白了点什么。&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;quote-source&quot;&gt;&lt;span class=&quot;quote-author&quot;&gt;Geoffrey James&lt;/span&gt; &lt;cite class=&quot;quote-title&quot;&gt;&lt;a class=&quot;quote-link&quot; href=&quot;http://www.amazon.com/The-Zen-Programming-Geoffrey-James/dp/0931137098&quot;&gt;Book 4 Chapter 6, The Zen of Programming&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;!-- more --&gt;

&lt;h2&gt;买还是不买这可就是问题&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;程序员甲：如果觉得这个工具好，你应该花钱去买它，不然大家都只想要免费工具甚至盗版，慢慢就没人愿意开发真正高水准的工具了，最后吃亏的还是用户啊！&lt;/p&gt;

&lt;p&gt;程序员乙：你说的有一定道理，我原来也是这么想的，可是自从我买了 TextMate 之后，它就不怎么更新了…&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;弱即是强&lt;/h2&gt;

&lt;figure class=&quot;quote&quot;&gt;&lt;blockquote&gt;&lt;p&gt;Any application that can be written in JavaScript, will eventually be written in JavaScript.&lt;/p&gt;

&lt;p&gt;凡是能用 JavaScript 写出的应用程序，最后（大家）都会用 JavaScript 去写。&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;quote-source&quot;&gt;&lt;span class=&quot;quote-author&quot;&gt;Jeff Atwood&lt;/span&gt; &lt;cite class=&quot;quote-title&quot;&gt;&lt;a class=&quot;quote-link&quot; href=&quot;http://blog.codinghorror.com/the-principle-of-least-power/&quot;&gt;Atwood&#39;s Law&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;figure class=&quot;quote&quot;&gt;&lt;blockquote&gt;&lt;p&gt;The less powerful the language, the more you can do with the data stored in that language. If you write it in a simple declarative form, anyone can write a program to analyze it.&lt;/p&gt;

&lt;p&gt;语言越弱，你就越能充分使用其中保存的数据；如果使用一种非常简单的声明式语法，随便谁都可以写一段程序来分析它。&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;quote-source&quot;&gt;&lt;span class=&quot;quote-author&quot;&gt;Tim Berners-Lee&lt;/span&gt; &lt;cite class=&quot;quote-title&quot;&gt;&lt;a class=&quot;quote-link&quot; href=&quot;http://www.w3.org/DesignIssues/Principles.html&quot;&gt;The Principle of Least Power&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;注意前者是后者的特例，因为 JavaScript 就是&lt;em&gt;看上去&lt;/em&gt;很弱的语言，随便谁都可以写一段“脚本儿”来干点啥，偏偏它是和世界上最强大的数据集（互联网上的文档）配合得最多的“脚本儿”，于是 JavaScript 现在成了无论前端后端还是桌面全都通吃的编程语言之王，如果你只打算学习一门编程语言的话，那就只能是 JavaScript 了（我不知道是大雾还是无误 -_-&lt;/p&gt;

&lt;h3&gt;The END&lt;/h3&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;灵感来自 &lt;a href=&quot;https://news.ycombinator.com/item?id=7308071&quot;&gt;HackerNews&lt;/a&gt;，原作是 Geoffrey James 经典的《编程之禅》和《编程之道》系列。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;灵感来自 &lt;a href=&quot;https://news.ycombinator.com/item?id=7310643&quot;&gt;HackerNews&lt;/a&gt;，发贴的是另一个颇有特色的编辑器 Chocolate 的作者。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <pubDate>Fri, 28 Feb 2014 15:14:00 +0800</pubDate>
                <link>http://cn.soulhacker.me/2014/02/28/paradox/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2014/02/28/paradox/</guid>
                
                <category>Internet</category>
                
                
            </item>
        
            <item>
                <title>炉石传说入门</title>
                <description>&lt;h2&gt;引子&lt;/h2&gt;

&lt;p&gt;不知不觉我已经玩了四个多月的炉石传说（HearthStone: Heroes of Warcraft）了，随着全球各服进入公测，势必会有越来越多的朋友加入，其中不少应该是没有什么卡牌游戏基础的，为了帮助大家尽快迈过刚开始的门槛，更好地体验这款优秀游戏，我决定借着春节宅在家的时间编写这篇入门指引，希望对朋友们有所帮助。&lt;/p&gt;

&lt;p&gt;炉石传说是一款虚拟卡牌游戏，玩家收集虚拟的卡片，然后构建强力的牌组来与其他玩家进行回合制对战。其基本概念来自传统桌面游戏的一个分支：集换式卡牌游戏（TCGs，trading card games），其典型代表是万智牌（Magic: the Gathering）和游戏王（Yu-Gi-Oh!），暴雪尝试通过简化规则和抛弃实体卡来扩大潜在玩家群体，并借助魔兽世界（WarCraft）庞大的传说（lore）资源和爱好者群体，建立一个休闲为主、兼顾竞技的数字化卡牌游戏平台，也是暴雪进入免费网络游戏和游戏微支付盈利模式的又一次尝试。到目前为止游戏取得了不错的成绩，但也出现了一些问题，其中之一就是相比暴雪其他游戏，炉石传说具有一定的入门门槛：虽然即使什么都不知道也可以在开始阶段获得很多乐趣，但是稍微深入一点就会遇到不少问题，这主要是因为卡牌游戏本身比较小众，这时候了解一些卡牌游戏的基本概念会很有帮助，这也是本文的主要目标。&lt;/p&gt;

&lt;p&gt;本文分为两个大的部分，第一部分我摘译了来自著名电竞社区 TeamLiquid 的一篇非常棒的入门指南 “&lt;a href=&quot;http://www.liquidhearth.com/forum/viewmessage.php?topic_id=410&quot;&gt;A Beginner’s Guide to HS Terms&lt;/a&gt;”，这篇文章由资深的万智牌玩家编写，是我看到过的对卡牌游戏基础概念解说最为精到的文字，不仅可以帮助新手快速理解卡牌游戏的核心概念，也有助于更好地融入游戏社区。第二部分则是结合我自己的游戏经验，谈谈如何在炉石传说的构筑卡组对战（Play mode）中走的更远。&lt;/p&gt;

&lt;p&gt;因为我自己主要在美服玩，同时为了照顾国服玩的朋友，下文中提到的卡牌都提供了中英对照的名称，并附有来自 HearthHead 网站的浮动图片显示。另外在第一部分的摘译中我也对原文进行了少量的更新以适应目前的环境，并增加了许多针对中文玩家的说明，有条件的朋友如有兴趣可以阅读下原文。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;Part I - 术语指南&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/guide-to-hs-terms.png&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以下是炉石传说涉及到的一些卡牌游戏术语列表，它们大多不是炉石传说创造出来的——事实上大部分是由万智牌（可以认为是这类游戏的开创者）的开发者和玩家定义的，虽然炉石传说具有不少独创的特点，但是在基本概念上是完全通用的。这些术语被划分为三部分：卡组类型、一般术语和高级概念，这里一般和高级的区别在于，一般术语涵盖的是游戏机制本身的一些概念，而高级概念更多和游戏玩家的策略有关，是玩游戏的过程中会碰到的一些更复杂的概念。&lt;/p&gt;

&lt;h3&gt;卡组类型&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Aggro 快攻&lt;/strong&gt;：力争占据主动权并尽快攻击对手英雄来结束战斗的卡组。这种卡组一般比较容易组成而且也易于理解，但有一点必须注意，aggro 卡组并不永远意味着快速展开和铺怪&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;，有相对慢一些的卡组也属于这个分类，比如在万智牌中很出名的 “&lt;a href=&quot;http://www.starcitygames.com/magic/misc/810_A_Brief_History_Of_Stompy.html&quot;&gt;Stompy&lt;/a&gt;” 或者 “Big Aggro” 都是这样的例子，他们的共同点是早期占场然后不断放下一些较平均值更重量级的仆从来压制对手，&lt;a href=&quot;http://www.hearthhead.com/card=90&quot;&gt;Chillwind Yeti&lt;/a&gt;（冰风雪人）是最典型的例子，因为它通常都是四费阶段三围最好的仆从。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Control 控制&lt;/strong&gt;：这是炉石传说中另一个常见的卡组类型，它们的特征是力争存活到游戏后期然后依靠少量强大的威胁赢得游戏。如果你基本上只靠 &lt;a href=&quot;http://www.hearthhead.com/card=374&quot;&gt;Ragnaros&lt;/a&gt;（拉格纳罗斯）、&lt;a href=&quot;http://www.hearthhead.com/card=1186&quot;&gt;Ysera&lt;/a&gt;（伊瑟拉）、&lt;a href=&quot;http://www.hearthhead.com/card=777&quot;&gt;Lord Jaraxxus&lt;/a&gt;（加拉克苏斯大王） 作为胜利条件&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;，在游戏的大部分时间里力争生存直到这些巨巨出场帮助你赢得胜利，那么这就是典型的控制卡组。在刚刚开始内测的时候，很多人经常把控制类卡组和下面这个类型搞混。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Midrange 中速&lt;/strong&gt;：在炉石社区里很多标为“控制类型”的卡组其实属于这个类型，公平地说这里的界限并没有那么清晰，但对有经验的卡牌游戏玩家来说还是有一些明显差异的。典型的中速卡组力争在每一回合取得一点点优势，流行的卡牌 &lt;a href=&quot;http://www.hearthhead.com/card=281&quot;&gt;Argent Commander&lt;/a&gt;（银色指挥官）以及能够强化其他仆从的仆从都是很好的例子。如果你的卡组设计为在游戏中从一开始就不断累积场上优势，那么这是中速类型&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;。中速卡组的取胜之道是：面对快攻卡组要打得像控制卡组，而面对控制卡组要打得像快攻卡组&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;&lt;p&gt;控制和中速类型卡组经常让人混淆的主要原因之一是中速牌组往往力图通过较大的仆从和比较超值的法术来“控”场，这一点后面还会阐述，不过这里要强调的是，某些时候打的比较偏“控制”并不意味着卡组是控制类型。&lt;/p&gt;&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Combo 组合&lt;/strong&gt;：即依靠一组特定组合卡牌的效果赢得对局的卡组，这是最难创建的卡组类型，因为真正的一击必杀组合技往往在游戏推出前就被设计者干掉了&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;，曾经的猎人 &lt;a href=&quot;http://www.hearthhead.com/card=1243&quot;&gt;Unleash The Hounds&lt;/a&gt;（关门放狗）OTK（one turn kill，即一回合击杀）卡组是迄今为止最好的例子，当时的关门放狗卡牌能够帮助猎人在空场的情况下凭空一回合创造超过30点伤害，后来该卡牌被暴雪重做为目前的形态，从而消除了该组合的可能性。事实上在经典的卡牌游戏里有两类组合卡组：互动型和非互动型，其中互动型是稍微不那么令人沮丧的，前述猎人 OTK 卡组就属于这一类；而非互动型组合卡组基本不会出现在炉石传说中，如果感兴趣，可以了解下游戏王里著名的“黑暗大法师”卡牌，这是一套五张卡牌，只要集齐黑暗大法师身体的五个部分于手牌就立刻赢得对局，这种组合卡组和对手完全没关系，只要能快速的检索卡组，对手对你获胜是完全无法施加影响的，事实上游戏王里设计这组卡也更多是为了剧情需要。相对来说，猎人 OTK 卡组是完全可以阻止的，只要在第七回合之前在场上铺上足够的嘲讽仆从就行了。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;&lt;p&gt;在万智牌中也有少量的非互动型组合卡组：做X+Y+Z即获胜，但取胜条件往往包含某些需要显式打出的牌（而不是黑暗大法师那种仅仅在手就行），而万智牌和炉石传说的一个基本差异在于万智牌中你永远可以在对手的打牌阶段进行反制，所以万智牌里这并不成为一个太大的问题，但炉石传说里就不应该出现这种类型的卡组了（除非开发者脑抽）。&lt;/p&gt;&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Aggro-control 控场快攻&lt;/strong&gt;：由于基本互动机制的设计，相比万智牌在炉石传说中更容易出现这种卡组，这种卡组往往通过一开始建立小的场上威胁然后转入快速打脸，也就是早期控场然后猛攻对方英雄。这种类型的卡组比纯快攻稍慢，前期比较重视控场，一些着重于武器卡牌的卡组经常属于这种类型，因为可以通过武器来消除对方场上仆从，然后使用己方场上仆从快攻对方英雄来取胜。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Tempo 节奏&lt;/strong&gt;：这是另一个非常难构建的类型，在所有卡组类型里属于比较非主流的，因为它通常会放弃&lt;em&gt;卡牌优势&lt;/em&gt;&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;，通常这种类型的卡组会扔出几个快速威胁——比如 &lt;a href=&quot;http://www.hearthhead.com/card=405&quot;&gt;Mana Wyrm&lt;/a&gt;（法力游龙）——然后想办法拖延对方的节奏，阻止对方消除自己的这个威胁，然后这个威胁会越变越大对对手产生巨大伤害。一些节奏卡组的典型好卡包括：&lt;a href=&quot;http://www.hearthhead.com/card=519&quot;&gt;Freezing Trap&lt;/a&gt;（冰冻陷阱）、&lt;a href=&quot;http://www.hearthhead.com/card=587&quot;&gt;Frost Nova&lt;/a&gt;（冰霜新星），他们都不会带来卡牌优势（多数时候是净亏卡），但是如果你的战术目标就是拖延对手那就无所谓了。其他常见的节奏卡组核心威胁卡还有：&lt;a href=&quot;http://www.hearthhead.com/card=1693&quot;&gt;King Mukla&lt;/a&gt;（穆克拉）、&lt;a href=&quot;http://www.hearthhead.com/card=932&quot;&gt;Gadgetzan Auctioneer&lt;/a&gt;（加基森拍卖师）等，而其他用来占据节奏优势的卡包括 &lt;a href=&quot;http://www.hearthhead.com/card=461&quot;&gt;Sap&lt;/a&gt;（闷棍）、&lt;a href=&quot;http://www.hearthhead.com/card=113&quot;&gt;Counterspell&lt;/a&gt;（法术反制）、&lt;a href=&quot;http://www.hearthhead.com/card=990&quot;&gt;Conceal&lt;/a&gt;（隐藏）等。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;一般术语&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Board Wipes 清场&lt;/strong&gt;：指如 &lt;a href=&quot;http://www.hearthhead.com/card=1004&quot;&gt;Flamestrike&lt;/a&gt;（烈焰风暴）、&lt;a href=&quot;http://www.hearthhead.com/card=841&quot;&gt;Holy Nova&lt;/a&gt;（神圣新星）这类群体伤害效果，由于来自魔兽世界游戏的习惯，在炉石传说社区中经常被称为 AoE（Area of Effect，范围效果），但这个“范围”的提法显得有点不够严谨，炉石传说中确实有一些“范围”相关的效果卡，比如 &lt;a href=&quot;http://www.hearthhead.com/card=430&quot;&gt;Cone of Cold&lt;/a&gt;（冰锥术）和 &lt;a href=&quot;http://www.hearthhead.com/card=394&quot;&gt;Explosive Shot&lt;/a&gt;（爆炸射击），但在卡牌游戏里习惯称之为“多目标移除”效果（multitarget removal）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Bounce 回手&lt;/strong&gt;：这个词儿等价于“将一个场上的仆从返回其所有者手牌”，这类卡常见于节奏卡组中，一般来说是亏卡的效果。回手一个仆从比击杀要差因为对手总还是可以再次使用被回手的卡，所以运用这种效果需要仔细的设计。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Burn 直伤&lt;/strong&gt;：等价于“对X造成Y点伤害” ，经常是针对对方英雄，所以中文社区也经常称之为打脸。快攻卡组在中期以后通常都会不断的打脸直到对方倒下。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Cantrip 过牌&lt;/strong&gt;：等价于任何带有“抽X张卡”的效果，这类卡通常都是很有价值的，因为它们至少抽一张卡来替代自己，这会带来所谓的&lt;em&gt;卡牌优势&lt;/em&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Clock 计时器&lt;/strong&gt;：这个是稍微没那么常见的术语，但却很重要，你的威胁可以看做一个计时器，也就是在多少回合之后你可以杀死你的对手（如果你的威胁不被解除），比如在空场情况下，你的对手有12点生命，那么出场一个 &lt;a href=&quot;http://www.hearthhead.com/card=281&quot;&gt;Argent Commander&lt;/a&gt;（银色指挥官）等于一个3回合的计时器，这个概念对于快攻和节奏卡组来说格外重要，相应的，控制卡组更多会这么去思考：对方会给我多大的压力（我还能撑多少回合）？&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Curve （法力）曲线&lt;/strong&gt;：组成卡组的卡牌按照各费用统计分别有多少张，组成一个分布图，这往往能看出卡组偏向游戏前中还是后期，各种卡组类型会有不太一样的典型曲线，虽然不是绝对的，但经常具有参考价值。在炉石传说的组卡界面里，鼠标停在英雄头像处就会显示当前的卡组曲线。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Filtering 滤牌&lt;/strong&gt;：从卡组的某个子集中选出一部分卡，有时候还允许玩家挑选其中的某张。和过牌不一样，这通常不直接带来&lt;em&gt;卡牌优势&lt;/em&gt;，但是因为可以有目标地选择有用的牌，对于组合卡组和某些控制卡组来说是很强大的效果，典型的例子是 &lt;a href=&quot;http://www.hearthhead.com/card=1047&quot;&gt;Tracking&lt;/a&gt;（追踪术）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Going Off 发动/起爆&lt;/strong&gt;：一个组合卡组在某特定回合“发动”然后你就挂了 -_-&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ping 点（掉）&lt;/strong&gt;：对目标施以刚好一点伤害并击杀它，或者之后用其他较弱的仆从换掉它，法师的英雄技能和 &lt;a href=&quot;http://www.hearthhead.com/card=573&quot;&gt;Shiv&lt;/a&gt;（毒刃） 这样的法术都经常用来干这个。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ramp 跳卡&lt;/strong&gt;：指获得额外资源的效果，从而你可以提前打出某些卡，或者在一回合打出更多的卡，炉石传说中的德鲁伊英雄的招牌特征就是拥有游戏中最强的跳卡能力，无论是 &lt;a href=&quot;http://www.hearthhead.com/card=254&quot;&gt;Innervate&lt;/a&gt;（激活） 还是 &lt;a href=&quot;http://www.hearthhead.com/card=1124&quot;&gt;Wild Growth&lt;/a&gt;（野性成长）都是典型的跳卡效果。对其他职业来说最典型的跳卡选项是抽中后手而获得的幸运币。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Synergy 协同增效&lt;/strong&gt;：首先这个词儿和 “Combo 必杀组合” 不是同义词，一般来说 combo 会直接带来胜利（比如前述猎人的 OTK），而 synergy 的含义要广泛的多，只要多张卡的效果超过分别效果简单相加就可以认为它们之间有某种“协同增效”，比如任何带有激怒（Enrage）效果的仆从和 &lt;a href=&quot;http://www.hearthhead.com/card=285&quot;&gt;Cruel Taskmaster&lt;/a&gt;（严酷的监工）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Top Deck 顶牌&lt;/strong&gt;：这个术语来自实体卡牌游戏，就是待抽卡堆最上面的一张牌。在卡牌游戏中有两种说法与之有关，一种就是指当回合抽上来这张牌，比如说我“神抽了一张X”（top decking X）然后靠这个翻盘了，另一种是指某方已经用光了手牌，每回合只能指望抽上来的那张牌，这叫 “playing off the top”，这经常体现巨大劣势，因为几乎没有什么选择可做，即使血量优势很大，也可能在无手牌的状态下被对手逆转。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;高级概念&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Beatdown vs. Control 抢血与控制&lt;/strong&gt;：这大概是卡牌游戏里最重要的概念之一，如果可能的话请一定读一下这篇万智牌元老级玩家 Mike Flores 的经典文章：&lt;a href=&quot;http://www.starcitygames.com/magic/fundamentals/3692_Whos_The_Beatdown.html&quot;&gt;Who’s the Beatdown&lt;/a&gt;，虽然他举的例子都是万智牌而且是一些古旧的卡，但是概念是十几年都没变的（在可预见的将来也不会变）。简单的说，就是无论你使用什么类型的卡组，对手使用什么类型的卡组，在每一个特定的对局中，都有一方倾向于抢血（尽快杀死对面的英雄），而另一方就倾向于控制（存活并在后期解决战斗），如果在对局中对于“谁需要抢血”判断错误，往往就不可避免的会走向失败（当然判断正确也不一定会胜利）。这个问题的困难（以及重要性）在于，可能你的卡组在99%的对局中都是控制方，但并不意味着它必须在每一局都是控制方，某次你会碰到一个比你更“控制”的卡组，在这个对局中你必须打抢血。记得前面说的中速卡组吗？最早的中速卡组就是在这个概念的启发下设计出来的，其目标就是针对典型的控制卡组打抢血，而针对典型的快攻卡组打控制，从而在大量对局中取得较高的胜率。事实上在我写这个文章的时候，统治天梯的卡组就是中速卡组。Mike Flores 的文章里也给出了一些判断“谁该抢血”的一般性建议，摘录如下供参考：&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;quote&quot;&gt;&lt;blockquote&gt;&lt;ol&gt;
  &lt;li&gt;谁的卡组持有更多伤害输出？通常他应该打抢血。&lt;/li&gt;
  &lt;li&gt;谁的卡组持有更多去除卡？通常他应该打控制。&lt;/li&gt;
  &lt;li&gt;谁持有更多控制法术和抽卡牌？一般情况下他应该打控制。&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;quote-source&quot;&gt;&lt;span class=&quot;quote-author&quot;&gt;Mike Flores&lt;/span&gt; &lt;cite class=&quot;quote-title&quot;&gt;&lt;a class=&quot;quote-link&quot; href=&quot;http://www.starcitygames.com/magic/fundamentals/3692_Whos_The_Beatdown.html&quot;&gt;Who&#39;s The Beatdown?&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;有时候根据上述规则可以判断某方必然（只能）打抢血，但由于某些特定的卡牌组合，该方实际上很难成功抢血（比如对手有太多治疗能力，或者太快的直接伤害能力），那么这就形成了“卡组克制”，该方在这类对局中胜率就很堪忧了。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;The Vanilla Test 还原测试&lt;/strong&gt;：这是一种万智牌玩家经常使用的非常酷的对卡牌价值进行判断的方法。简单说就是：如果把卡牌的规则文本（即卡牌下半方框里的文字）完全去掉，这卡如何？以削弱前的 &lt;a href=&quot;http://www.hearthhead.com/card=608&quot;&gt;Shattered Sun Cleric&lt;/a&gt;（破碎残阳祭司）为例，削弱前她是3费的一张3/3体格的仆从，即使完全不考虑卡牌文字，这也是完全可以上场的卡牌，再加上给另一仆从+1/+1的效果，这是一张大大优于常规的卡（所以结果大家都知道，她被砍成现在的3/2了 -_-）。相反的例子是 &lt;a href=&quot;http://www.hearthhead.com/card=605&quot;&gt;Ancient Watcher&lt;/a&gt;（上古看守者），这是一张2费的4/5，所以文字必然是极大的负效果（无法攻击），所以运用这张卡的关键就是如何弱化甚至去除这种负效果（现在流行的给他施加嘲讽甚至干脆沉默掉他的效果都被证明非常有价值）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Card Advantage 卡牌优势&lt;/strong&gt;：这是另一个非常常见的术语，但是在很多情况下都没有被准确的表述。最具争议的例子是 &lt;a href=&quot;http://www.hearthhead.com/card=284&quot;&gt;Novice Engineer&lt;/a&gt;（工程师学徒），当你出这张卡，你抽一张卡，同时场上站了一个1/1的仆从，表面上看这是1换2，但问题是在炉石传说目前的阶段，一张牌的价值并没有精确的定义，很多人认为1/1的学徒并不值“一张卡”，所以她的价值低于1换2，相对的，&lt;a href=&quot;http://www.hearthhead.com/card=825&quot;&gt;Azure Drake&lt;/a&gt;（碧蓝幼龙）毫无争议的被看作至少是1换2的价值，因为对手很少能用少于一张卡来移除它，而它很容易带来额外的价值从而超过1换2的价值。另一个比较没有争议的1换2（多）的典型是 &lt;a href=&quot;http://www.hearthhead.com/card=1004&quot;&gt;Flamestrike&lt;/a&gt;（烈焰风暴），只要对手场上不少于2张牌，这张牌的价值就至少是1换2。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一个常见的误区是把&lt;em&gt;卡牌优势&lt;/em&gt;用作说明手牌多或者场上有更多仆从，这都是不对的，正确的方式是把它理解为一个记分牌，两个对手通过尽可能高效地使用他的卡牌资源来竞赛，比如某方打出1换2，那么就得到+1分，某方被迫用3张卡牌（手牌或者场上仆从）去换掉对手一张牌，那么就得到-2分，卡牌效率得分高是拥有“卡牌优势”的充分必要条件。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Expected Value 期望值&lt;/strong&gt;：期望值是很多游戏中都用到的工具，不过最经常用在扑克牌戏（如德州扑克）中，用来计算在某个特定局面下各种可能带来的平均回报，最常见就是用来计算获胜的可能性。例如：你是一个法师，依靠 &lt;a href=&quot;http://www.hearthhead.com/card=192&quot;&gt;Ice Block&lt;/a&gt;（寒冰屏障）活下来，只有一抽决定你的生死，你的卡组只剩三张牌：&lt;a href=&quot;http://www.hearthhead.com/card=1087&quot;&gt;Pyroblast&lt;/a&gt;（炎爆术）、&lt;a href=&quot;http://www.hearthhead.com/card=315&quot;&gt;Fireball&lt;/a&gt;（火球术）和 &lt;a href=&quot;http://www.hearthhead.com/card=658&quot;&gt;Leper Gnome&lt;/a&gt;（麻风侏儒）。在这个局面下，如果你的对手剩6点生命的话，你的获胜期望值就是 66%，如果他有10点生命，你的获胜期望值就只有 33% 了。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Part II - 卡组构筑初步&lt;/h2&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/hs-deck-constructing.jpg&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这一部分我会结合上面谈到的基本概念以及我自己的经验，给刚迈进炉石传说的新人朋友们一些建议，仅供参考。&lt;/p&gt;

&lt;h3&gt;基础知识&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;炉石传说有两个核心游戏模式：构筑模式（使用自己拥有的卡构建卡组的 Play mode）和竞技场模式（随机选卡的 Arena mode），竞技场模式主要目的是提供一个免费获取卡牌的途径，它和构筑模式非常不同，下面说的一切都只针对构筑模式。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;炉石传说从一开始就被设计为休闲为主、兼顾竞技的游戏，所以选择自己舒服的玩法就好，并不需要太过追求战绩。但如果确实希望自己在天梯上取得一定的成绩才会觉得满足的话……请继续看下去（&lt;strong&gt;否则可以到此为止啦&lt;/strong&gt;）。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;卡牌游戏的核心循环是：收集卡牌 - 构建卡组 - 对战 - 调整卡组 - 对战 - 收集更多卡牌 - …，这里面每一个环节都很重要也可以很有乐趣。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;收集卡牌需要付出金钱和/或时间，一般来说就是量力而为，全卡有全卡的玩法，不全也有不全的玩法，但总的来说必须要去收集，有不断增长的卡集才会有继续玩的乐趣。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;从无到有的构建一个有竞争力的卡组不是每个人都能做到的，所以一开始肯定要参考网上流传的各种优质卡组，但一边对战一边调整，使之更适合自己拥有的卡集以及自己的打牌风格是必备的能力，需要不断磨练。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;没有万能的卡组，任何卡组都有天敌，所以还有一个潜在的游戏内容：游戏元环境（meta），也就是“目前大家主要在玩什么样的卡组”，能够根据对这个问题的判断调整自己的卡组来提高胜率才算是较成熟（serious）的构筑模式玩家。掌握游戏元环境的方法主要是借助网络等渠道了解最新信息，玩家间交流以及实战中获得信息。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;卡牌游戏通常都是易会难精，很多人打了一阵就觉得打牌没什么，通常似乎就那么几个选择而已，其实在水平达到更高水准之前压根就不知道还有别的选择，往往是前期一个看似不起眼的选择差异最终导致不一样的结果。相信熟悉桥牌的朋友会很容易理解这个概念。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;卡组构筑&lt;/h3&gt;

&lt;p&gt;上面已经提到，通常我们都是先参考流行卡组，边打边微调提升自己运用的实际效果，然后慢慢的学会更多的自主设计卡组，这个过程一般不会太快，但是了解一些套路会有帮助。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;选择英雄&lt;/strong&gt;：这个问题的答案，当然是“有爱最大”，但也应该了解一些常识：有些职业比其他的职业更容易构建出有一定竞争力的卡组（比如牧师和盗贼），而另一些职业需要更多投入取得一些价值不菲的关键卡（比如德鲁伊和圣骑士）；有些职业的英雄技能是相对比较容易上手的（比如法师和盗贼），等等，这些信息会有助于做出最初的选择。当然如果一开始就打算投入一笔不多不少的钱，完全可以全职业制霸，选自己最喜欢或者最热门的英雄开玩就好。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;选择卡组类型&lt;/strong&gt;：上面列举了很多卡组的类型，对于新人来说至少要在偏快速还是偏后期中做出选择，因为这两个方向需要的卡牌和打牌风格差异都很大，一开始选错可能会走不少冤枉路，按照自己的性格和准备投入的资源选择吧。一般来说快攻卡组会比较廉价，也会有一定的胜率，但比较看脸，大多数人都会先从这种开始。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;确定卡组主题&lt;/strong&gt;：这里的关键就是“&lt;strong&gt;胜利条件（winning condition）&lt;/strong&gt;”，也就是说，在什么情况下你会取胜？例如经典的猎人 Turn 7 卡组，其原理是：从1到7回合一共会得到 28 点法力水晶，如果能保证每点水晶给予对手英雄一点伤害那么就可以在第八回合用英雄能力“稳固射击”取得胜利，这就是胜利条件。那么整个卡组就围绕这个主题来进行：每费选出能冲锋或者战吼给予对手对应点数伤害的仆从和法术，这就是卡组的基础了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;了解职业强卡&lt;/strong&gt;：卡牌游戏的重要特点之一就是——有神卡也有废卡，总有一些卡比其他的要更强一些。每个职业都有自己专属的强卡，也有和自己特点配合最好的一些中立卡，比如德鲁伊有核心的十二张职业卡（&lt;a href=&quot;http://www.hearthhead.com/card=254&quot;&gt;Innervate&lt;/a&gt; 激活x2，&lt;a href=&quot;http://www.hearthhead.com/card=836&quot;&gt;Wrath&lt;/a&gt; 愤怒x2，&lt;a href=&quot;http://www.hearthhead.com/card=64&quot;&gt;Swipe&lt;/a&gt; 横扫x2，&lt;a href=&quot;http://www.hearthhead.com/card=601&quot;&gt;Keeper of the Grove&lt;/a&gt; 丛林守护者x2，&lt;a href=&quot;http://www.hearthhead.com/card=692&quot;&gt;Druid of the Claw&lt;/a&gt; 利爪德鲁伊x2，&lt;a href=&quot;http://www.hearthhead.com/card=920&quot;&gt;Ancient of Lore&lt;/a&gt; 知识古树x2）再加配合最佳的中立仆从 &lt;a href=&quot;http://www.hearthhead.com/card=778&quot;&gt;Harvest Golem&lt;/a&gt; 麦田傀儡x2；猎人有核心职业卡牌 &lt;a href=&quot;http://www.hearthhead.com/card=1243&quot;&gt;Unleash The Hounds&lt;/a&gt; 关门放狗x2、&lt;a href=&quot;http://www.hearthhead.com/card=1241&quot;&gt;Starving Buzzard&lt;/a&gt; 饥饿的秃鹫x2、&lt;a href=&quot;http://www.hearthhead.com/card=585&quot;&gt;Explosive Trap&lt;/a&gt; 爆炸陷阱x2、&lt;a href=&quot;http://www.hearthhead.com/card=1091&quot;&gt;Misdirection&lt;/a&gt; 误导x2 等，把这些卡有选择的加入上一步组成的集合里就是一个相当有竞争力的卡组雏形了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;加入解卡&lt;/strong&gt;：对战是两个人的博弈，不是只有自己的威胁，对方也会不断拿出威胁，那么卡组中除了上述卡牌之外还需要补充哪些解除对方威胁的卡？这要看对方主要会有什么威胁，如果对你的卡组主题来说最怕的是对方的嘲讽仆从，那么需要有针对性的带上破嘲讽的解卡（比如带沉默效果的卡，或者专门针对性的 &lt;a href=&quot;http://www.hearthhead.com/card=1656&quot;&gt;The Black Knight&lt;/a&gt; 黑骑士）；如果你的卡组主题就是要和对手拼后期的，那么你必须有足够的破解对方大牌的解牌，如 &lt;a href=&quot;http://www.hearthhead.com/card=77&quot;&gt;Polymorph&lt;/a&gt; 变形术、&lt;a href=&quot;http://www.hearthhead.com/card=766&quot;&gt;Hex&lt;/a&gt; 妖术、&lt;a href=&quot;http://www.hearthhead.com/card=570&quot;&gt;Tinkmaster Overspark&lt;/a&gt; 工匠大师 等。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;平衡曲线&lt;/strong&gt;：仔细审视到目前为止的卡组法力曲线，一般合格的曲线是以某个关键费用（通常是4费）为中心呈现的正态分布曲线，如果曲线过于偏向左或者右，那就需要有针对性的调整。炉石传说里设计了很多效果类似但是费用不同（当然属性也不一样）的卡牌，拿掉一些过于拥挤费用上的卡牌，用较稀少费用的类似效果卡牌代替。有时候卡组会不够30张，有时候会30张装不下，也在这个步骤里进行合理的调配吧。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;实验和调整&lt;/strong&gt;：有条件的朋友可以找好友组特定卡组来实验，或者在休闲模式多打些，都是可以的，然后有针对性的进行调整，比如经常在某费无牌可出，可能需要重新思考法力曲线的平衡；经常被某特定卡牌或者套路欺负，那么可以增加一些针对的卡；出现手牌不足或者老抽不齐关键卡牌，就要考虑增加一些过牌；需要的卡牌太多，就需要一些特定关键卡来集成几种效果从而压缩卡组，等等，这些就只能慢慢体会了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;实战&lt;/strong&gt;：无论怎么样最后总是要上战场的，去天梯实战吧！Rank 5 以前都有连胜奖励，即使输掉一些对局也不太要紧，心态放好就行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;学而时习之&lt;/strong&gt;：做任何事要做好都不容易，不时看看相关的论坛，和玩友多交流交流，看看自己喜欢的职业有哪些新的组卡和打法思路，经常会有启发；对自己不太用的职业也有必要了解，不做到知己知彼是不可能有好成绩的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;好长的一篇！那么……就到这里吧，谢谢看完的朋友们捧场（估计没几个吧），希望对大家有帮助，有问题欢迎留言讨论！&lt;/p&gt;

&lt;hr /&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;http://static.wowhead.com/widgets/power.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;var wowhead_tooltips = { &quot;colorlinks&quot;: true, &quot;iconizelinks&quot;: true, &quot;renamelinks&quot;: true }&lt;/script&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;所以“快攻”只是一个不太准确的翻译，但已经被普遍采用所以我仍然采用这一译法。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;胜利条件：原文为 “winning condition”，即设计卡组时预设的主要获胜场景，是非常重要的概念，在本文后半部分还会重点阐述。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;和“快攻”一样，“中速”也是个并不太准确但约定俗成的译法。 &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;这一点和下面会提到的著名的 “Beatdown vs. Control” 概念有很大的关系，请对照。 &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;炉石传说开发团队早就明确表示过，由于对游戏体验的巨大伤害，不能通过对手互动行为阻止的必杀组合技是不允许出现的。 &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;即下文会阐述的 Card Advantage，也是卡牌游戏中的重要概念，请对照。 &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <pubDate>Mon, 03 Feb 2014 16:07:00 +0800</pubDate>
                <link>http://cn.soulhacker.me/2014/02/03/hearthstone-fundamentals/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2014/02/03/hearthstone-fundamentals/</guid>
                
                <category>Games</category>
                
                
            </item>
        
            <item>
                <title>Merry Christmas, from My iPhone</title>
                <description>&lt;p&gt;明天就是圣诞节了，在这里跟各位朋友提前说一声“圣诞快乐”。年末商战渐入高潮，看了几支大品牌的圣诞广告，有点感想没法在几条推里说完，就在这里和大家分享吧。&lt;/p&gt;

&lt;p&gt;首先是 Apple 为其 iPhone 5s 制作的电视广告 “&lt;a href=&quot;https://www.youtube.com/watch?v=nhwhnEe7CjE&quot;&gt;Misunderstood&lt;/a&gt;”，如果还没看过的话，可以在 Apple 的 YouTube 官方频道&lt;a href=&quot;https://www.youtube.com/watch?v=nhwhnEe7CjE&quot;&gt;观看&lt;/a&gt;。这支长达 1 分半钟的广告讲述了一大家人的白色圣诞节，主角是一位略显内向羞涩的少年，他一边和家人一起参与各种活动，一边无时不刻地摆弄着自己的 iPhone 5s 智能手机，似乎是在说科技产品让人之间疏远？当然不是，最后少年在圣诞早晨打开大屏幕电视，用 iOS 的 AirPlay 功能在电视上播放了自己这些天拍摄和剪辑的视频，里面记录了大家族团聚的各种难忘瞬间，最后在感人的催泪弹中结束。同时 Apple 还在自己的官方频道上传了一段长度约 2 分钟名为 “A Harris family holiday” 的视频，基本上是广告里少年所制作的视频的完整版本（我很好奇这是不是真的完全用 iPhone 拍摄和制作完成的）。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/misunderstood.jpg&quot; width=&quot;800&quot; alt=&quot;Apple Holiday Ad 2013 - Misunderstood&quot; /&gt;&lt;/p&gt;

&lt;p&gt;就像其他好的艺术品，这支广告并不是简单传达单调的概念，而是能给每个观众带来不一样的感触，而每个人的观感是和他的经历、价值观等密切相关的。就我自己来说，我觉得这支广告的独特之处在于它就像 Apple 一样，独特、大胆，敢于与众不同。为什么这么说？这是圣诞购物季，在 Samsung 这种公司使劲儿&lt;a href=&quot;https://www.youtube.com/watch?v=PYaIshYevcI&quot;&gt;推销它的产品如何 powerful&lt;/a&gt; 的时候，Apple 却敢于在广告的大部分时间里传达这么一种显得负面的印象：在大家族团聚时，这个少年似乎更在意自己的 iPhone，这种“高科技淡化人际情感”的担心很多人都有，Apple 在这里直面了这个问题，并在一个巧妙的结尾里给出了自己的答案：我们开发的是优秀的工具，它也许会让人沉迷，但在有想法的人手里，它能超越过去任何工具，变不可能为可能，带来无与伦比的效果。“为世界上最棒的人带来最棒的工具”正是 Apple 的核心价值观，深埋于已故创始人 Steve Jobs 的成长经历中，展现在经典的 “Think Different” 广告中，Jobs 去世后 Laurene P. Jobs 也在&lt;a href=&quot;http://www.cultofmac.com/223449/steve-jobss-widow-speaks-out-his-legacy-is-beautiful-for-me-to-live-with-video/&quot;&gt;接受采访时讲过&lt;/a&gt;——现在我很高兴的看到，在 Jobs 离去两年多以后，Apple 还是那个 Apple，那个也许产品功能不独特，但最善于把握&lt;a href=&quot;http://soulhacker.me/2012/03/31/soul-link/&quot;&gt;产品与人之间情感连接&lt;/a&gt;的 Apple。后来（同样很开心地）发现，我的感受和长期与 Apple 共事的广告大师 Ken Segall 不谋而合，他在自己 blog 的一篇短文里写道：&lt;/p&gt;

&lt;figure class=&quot;quote&quot;&gt;&lt;blockquote&gt;&lt;p&gt;The twist, of course, is that this kid is different. Far from withdrawn, he’s actually inspired. He’s using technology to give the family a gift from the heart — one that will be treasured for years to come.&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;quote-source&quot;&gt;&lt;span class=&quot;quote-author&quot;&gt;Ken Segall&lt;/span&gt; &lt;cite class=&quot;quote-title&quot;&gt;&lt;a class=&quot;quote-link&quot; href=&quot;http://kensegall.com/2013/12/apple-thinks-different-for-christmas/&quot;&gt;Apple thinks different for Christmas&lt;/a&gt;&lt;/cite&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;这支广告播出之后当然也不是只有好评，Forbes 的编辑 Jennifer Rooney 就有&lt;a href=&quot;http://www.forbes.com/sites/jenniferrooney/2013/12/17/the-iphone-misunderstood-christmas-ad-is-a-sad-commentary-on-culture-and-does-apple-no-favors/&quot;&gt;一篇评论&lt;/a&gt;对此颇不以为然，这篇文章被转到比较偏技术向人群聚集的 &lt;a href=&quot;http://www.reddit.com/r/technology/comments/1tix2m/apples_christmas_ad_a_sad_commentary_on_culture/&quot;&gt;/r/technology&lt;/a&gt; 立刻引来大把评论，可以看到大部分观众表示感受到了创意和感动，尤其是不少上了年纪的大叔回忆起自己刚当爹的时候扛着重型装备全程拍孩子的（既兴奋又疲劳的）日子。&lt;/p&gt;

&lt;p&gt;Apple 曾经是科技公司里重视商业广告的异类，但随着后 PC 时代的概念广为人们所接受，计算机沿着智能手机开辟的疆土，终将延展到“无处不在的计算”领域，成为和家用电器、手表围巾一样的消费商品，所以我们也可以看到越来越多的科技巨头重视商业广告，借助新旧媒体扩大品牌影响力，请看 Samsung 这这支 “&lt;a href=&quot;https://www.youtube.com/watch?v=PYaIshYevcI&quot;&gt;Are You Geared Up?&lt;/a&gt;”，还有 Nokia 的这支 “&lt;a href=&quot;https://www.youtube.com/watch?v=Q7xVrI-tUIQ&quot;&gt;For Work. For Play&lt;/a&gt;”，还有 Microsoft 这支很 last century 的 “&lt;a href=&quot;https://www.ispot.tv/ad/75ZE/microsoft-surface-2-teacher&quot;&gt;Teacher&lt;/a&gt;”，水准高下各位自有公论。&lt;/p&gt;

&lt;p&gt;最后还要再说一次: Merry Christmas, to all tech lovers. We ARE the future of human beings.&lt;/p&gt;

</description>
                <pubDate>Tue, 24 Dec 2013 18:34:00 +0800</pubDate>
                <link>http://cn.soulhacker.me/2013/12/24/merry-christmas/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2013/12/24/merry-christmas/</guid>
                
                <category>Internet</category>
                
                
            </item>
        
            <item>
                <title>译文：为何 SICP 意义重大</title>
                <description>&lt;p&gt;&lt;strong&gt;原文&lt;/strong&gt;：&lt;a href=&quot;http://www.cs.berkeley.edu/~bh/sicp.html&quot;&gt;Why &lt;em&gt;Structure and Interpretation of Computer Programs&lt;/em&gt; Matters&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;作者&lt;/strong&gt;：&lt;em&gt;Brian Harvey, University of California, Berkeley&lt;/em&gt;&lt;br /&gt;
&lt;strong&gt;译者&lt;/strong&gt;：&lt;em&gt;Neo Lee a.k.a @soulhacker&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;译者序&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;Brian Harvey 是加州大学伯克利分校计算机科学专业的教授。2011 年是麻省理工大学（MIT）建校 150 周年，为了庆祝，《波士顿环球报&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;》准备了一份 MIT 作出的重要创新列表，著名的计算机科学专业入门教材 Structure and Interpretation of Computer Programs (SICP) 名列其中，Brian Harvey 受邀对 SICP 的重要价值和意义书写一份说明，本文就是他当时的回应。关于函数式编程范型的价值和意义，是一个在计算机科学尤其是软件开发领域经常被提出的话题，通常也伴随着这样那样的争论：它深刻的理论背景与内涵、和人们常规思维模型的差异、一直难以流行的宿命引发的“曲高和寡还是不切实际”的争论，等等。我自己可能由于从小喜欢数学的缘故，对函数式编程范型一直很有好感，也深信如另一位大牛，John Hughes 在其名作 Why Functional Programming Matters&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;（不知道这两篇文章相似的标题是巧合，还是 Harvey 教授有意模仿了 WhyFP）中阐述的，函数式编程有其独特价值，很可能更接近我们追求的更理想的软件工程目标。SICP 从一个侧面似乎也证实了：一种一直没有流行起来的、非常典型的函数式编程语言，作为 LISP 方言的 Scheme，非常好的完成了“给大学一年级新生一个严谨扎实的编程概念基础”的任务，而 Harvey 教授的文章，非常简明、清晰的阐述了 SICP 的创新价值，即使在数十年之后的今天，也没有过时。下面是译文，除了特别标出的唯一一处以外，其他脚注都是我加上的，与原作者无关，请留意。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;strong&gt;译文&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;SICP 在很多方面都非常具有革命性，其中最重要的是，它显著的提高了计算机科学（CS）入门课程内容的智力水平。在 SICP 之前，CS 专业的第一门课通常都充斥着某种特定编程语言的细节，但 SICP 采取的方法是站在这些细节的背后，努力学会从大局着眼去思考计算的过程，它引导学生把注意力聚焦在“抽象”这个关键点，学会去寻找特定问题背后的一般模式，然后构建软件工具来解决这些一般性的问题。SICP 大量应用“函数也是数据”的概念，这个概念初期学起来很困难，但掌握之后极其强大（微积分是同一概念的另一种表现形式，也经常让很多之前数学课程都学得不错的学生栽跟头）。SICP 在 CS 专业的第一门课中展示了三种不同的编程范型（函数式、面向对象和描述式&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;），而大部分其他课程甚至连一种也没真正的讨论过。&lt;/p&gt;

&lt;p&gt;SICP 另外一个革命性标志是选择了 Scheme 作为教学编程语言。从有 CS 专业直到今天，大部分 CS 入门课程主要使用当时的“热门”语言，从 Pascal 到 C 到 C++ 到 Java 再到 Python。Scheme 从来未在行业中广泛应用，但它是 CS 入门课程的完美语言，因为它使用一个非常简单、一致的记法&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;来处理所有事情，而其他语言用一种记法来处理变量赋值，另外一种记法来处理条件执行，另外 2-3 种记法处理循环，再来一种处理函数调用，使用这些语言的课程得花上一半的时间来教授这些记法，而我在伯克利的基于 SICP 的课程上，只用第一个小时来讲记法就够了，整个学期剩下的时间我们都用来学习思想，而不是语法。同时，尽管有着无与伦比的简单性（也许恰恰是因为这种简单性），Scheme 仍是一种很全面的通用语言，所以我们能凭之窥见三种不同编程范型的概貌，尤其是可以让我们了解面向对象编程是怎么实现的，这样所有的面向对象编程语言对于我们的学生来说就不再像某种神奇的戏法。&lt;/p&gt;

&lt;p&gt;Scheme 是 Lisp 的一种方言，所以它能非常好地将函数作为数据来处理，同时它又是专业编程工作采用的 Lisp 方言的一个简化版本，去掉了很多枝节和装饰物。Abelson 和 Sussman&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; 非常大胆的在他们的入门课程中选择了最适合教学的编程语言，而无视了实际工作需要的各种其他编程语言，因为他们相信一旦掌握了那些真正重要的思想，学习另一种编程语言完全不是问题，就像进行一次周末例行大扫除一样，我从自己的经历出发也完全认同这一点。我经常对我的学生说：“你将在职业生涯中使用的编程语言还没被发明出来，所以我们没法在这里教给你，但我们必须教会你一些重要的技能，这样当它们出现时你很快就能学会。”&lt;/p&gt;

&lt;p&gt;最后，SICP 对于大学新生能达到的程度非常积极乐观，SICP 课程学生要编写编程语言的解释器，这通常被认为更适合于二年级或更高年级的学生。SICP 课本并不易懂，没有侧边栏、五颜六色的提示框和有趣的图片（这是现代教科书针对注意力难以长时间集中的学生的典型设计），它也没有冗复的练习题，每道练习题都讲授了一个重要的新思想；它使用大量的文字，但回报是更深入的阅读，每个句子都有其深意。&lt;/p&gt;

&lt;p&gt;从统计角度来说，以 SICP 为基础的课程只占一个很少的比例，但这本书的影响远远超出了这个少数比例，它启发了一系列后来教科书的作者，令他们有意识地努力去达到 SICP 树立的标准。而选择 Scheme 作为教学编程语言的也扩展到了从中学直到研究生院的范围。更多主流课程开始更重视编程范型，虽然它们大多只关注面向对象这一个编程范型。“计算机科学学科应该更加关注思想，而不全是关于编程实践”的观念也不断发展，进一步包括了一些非技术方面的思想，比如与计算相关的业务上下文和社会关联等。&lt;/p&gt;

&lt;p&gt;SICP 本身享有在 CS 入门教科书中少见的长寿命，一般来说一本教科书的寿命与其基于的编程语言挂钩，而 SICP 在 长达 25 年的时间里始终强健，迄今丝毫没有停印的迹象。在这 25 年间计算领域发生了巨大的变化，从巨大的主机系统发展到个人计算机再到今天手机上的互联网，但驱动所有这些变革背后的重要思想是一样的，他们都很好的体现在 SICP 中。&lt;/p&gt;

&lt;p&gt;我从 1987 年开始教授以 SICP 为基础的课程，这些课程随着时间一点点的改进，我们加入了关于并行计算、并发控制、用户界面设计以及客户/服务器模型等内容，但它们本质上仍是同样的课程。每隔几年系里都会有人提出把第一门课换成另外的某种 X 语言，但我总是说：“当有人写出基于 X 语言的世界上最好的计算机科学教科书之后再说吧。” 到目前为止每次系里最后都投票决定继续基于 SICP 课程来教学。我们很快就能看到这课程是不是可以坚持到我退休&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;最近关于 MIT 正在进行的电子工程和计算机科学（EECS）低年级课程重新设计的讨论越来越热烈，外部有人将其总结为“MIT 决定转向 Python”，但这是个误解。MIT 的决定主要是将以往基于内容领域组织的课程（编程范型，然后依次是电子电路，信号处理，架构等）转变为基于应用来组织（让我们搭建一个机器人并为其编程，让我们制造一部手机并为之开发软件等等），为了这个目标，几乎所有的课程都必须重新规划组织，编程语言的选择只是其中最不重要的一部分。他们的新模式对教学来说非常具有挑战性，因为所有课程都需要电子工程系和计算机科学系的紧密合作。也许未来某天这种应用为先的方式会引发一场伟大的变革，就像 SICP 曾经的那样，但目前还没实现。&lt;/p&gt;

&lt;p&gt;在我自己的经历中，罕有学生在上我的课时候就感觉良好，但对我们所有 CS 学生的调查显示，这课程是他们数年后回忆起来最喜欢的课。经常有多年前的学生拜访或发电邮告诉我，他们在工作中实际用上的很多重要想法，在他们念书时都认为是不切实际的象牙塔学术思想，Google 在数据并行处理领域的重要发明 MapReduce 软件，就深深植根于函数式编程的思想，这也算是对“象牙塔学术思想”的一种正名吧。&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;MIT 所在的波士顿地区发行量最大的报纸，成立于 1872 年，1993 年被《纽约时报》收购。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://www.cse.chalmers.se/~rjmh/Papers/whyfp.html&quot;&gt;&lt;em&gt;Why Functional Programming Matters&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;John Hughes, 1984, 1989, 1990&lt;/em&gt;. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;描述式编程范型 &lt;a href=&quot;http://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;Declarative Programming&lt;/a&gt;：摒弃控制流程，以描述和组合计算规则为主的编程模式，最典型的描述式编程范型应用包括结构化查询语言 SQL，以及逻辑编程语言 Prolog，绝大部分函数式编程语言中也大量采用这一范型，Scheme 即为很好的例子。 &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;记法，即 notation，是非常重要但经常被忽视的概念同时也是工具，有兴趣的朋友可以看看另外两位大家 &lt;em&gt;Brian Kernighan&lt;/em&gt; 和 &lt;em&gt;Rob Pike&lt;/em&gt; 合著的 &lt;a href=&quot;http://cm.bell-labs.com/cm/cs/tpop/&quot;&gt;&lt;em&gt;The Practice of Programming&lt;/em&gt;&lt;/a&gt; （国内有电子工业出版社的译本，裘宗燕老师的翻译质量相当不错）的第 9 章。 &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;&lt;em&gt;Harold Abelson&lt;/em&gt; 和 &lt;em&gt;Gerald Jay Sussman&lt;/em&gt;，MIT 的两位计算机科学教授，SICP 的原作者。 &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;&lt;strong&gt;原文作者注&lt;/strong&gt;：看来结果没能（完全）实现，伯克利新的入门课程采用 Python，但教案尽量保留了原先 SICP 的思想（某些地方甚至沿用了原来的文本）。 &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <pubDate>Thu, 02 May 2013 21:50:00 +0800</pubDate>
                <link>http://cn.soulhacker.me/2013/05/02/why-sicp-matters/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2013/05/02/why-sicp-matters/</guid>
                
                <category>Programming</category>
                
                
            </item>
        
            <item>
                <title>FUJIFILM X100S</title>
                <description>&lt;p&gt;作为一个 FUJIFILM X100 的忠实用户，实在是比较难抵抗 &lt;a href=&quot;http://www.fujifilm.com/products/digital_cameras/x/fujifilm_x100s/&quot;&gt;X100S&lt;/a&gt; 所有改进带来的诱惑，所以我在犹豫中错过第一批货之后还是订下一台，由于第二批货出厂一再延迟，到今天才终于辗转运到我手上。下面开始 show off…&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3&gt;用 X100 拍 X100S&lt;/h3&gt;

&lt;p&gt;买的港版赠送原厂皮套和一张 16G Class 10 Kinston 存储卡，这卡可以换给我原先的 X100，新机器继续用我的 Eye-fi（X100S 已经内置对 Eye-Fi 的支持）：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100s-1.jpg&quot; width=&quot;800&quot; alt=&quot;港版套装&quot; /&gt;&lt;/p&gt;

&lt;p&gt;开箱，港版还附赠一个转换头：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100s-3.jpg&quot; width=&quot;800&quot; alt=&quot;开箱&quot; /&gt;&lt;/p&gt;

&lt;p&gt;来张标准照:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100s-4.jpg&quot; width=&quot;800&quot; alt=&quot;X100S 正面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上面：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100s-5.jpg&quot; width=&quot;800&quot; alt=&quot;X100S 上面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;背面：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100s-6.jpg&quot; width=&quot;800&quot; alt=&quot;X100S 背面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接上广角扩展镜头 &lt;a href=&quot;http://www.fujifilm.com/products/digital_cameras/accessories/lens/conversionlens/x100wideconversionlens/&quot;&gt;WCL-X100&lt;/a&gt;：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100s-7.jpg&quot; width=&quot;800&quot; alt=&quot;X100S + WCL-X100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100s-9.jpg&quot; width=&quot;800&quot; alt=&quot;X100S + WCL-X100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;顺便说下，WCL-X100 镜头素质也很好，接上后等效焦距为 28mm，视野差距大致如下图：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100s-bc.jpg&quot; width=&quot;800&quot; alt=&quot;X100S WCL-X100 vs. Original&quot; /&gt;&lt;/p&gt;

&lt;p&gt;崭新的原厂皮套：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100s-a.jpg&quot; width=&quot;800&quot; alt=&quot;X100S X100S + 皮套&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;用 X100S 拍 X100&lt;/h3&gt;

&lt;p&gt;以后 X100 就退休了，可能给我丫头玩（或者卖掉？），向陪我两年、跑了三大洲的老大哥致敬〜&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100-1.jpg&quot; width=&quot;800&quot; alt=&quot;GJ X100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100-2.jpg&quot; width=&quot;800&quot; alt=&quot;GJ X100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/x100-3.jpg&quot; width=&quot;800&quot; alt=&quot;GJ X100&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;X100S vs. X100&lt;/h3&gt;

&lt;p&gt;那么，到底有什么差别呢？拿起 iPhone 拍一组对比看看。&lt;/p&gt;

&lt;p&gt;首先看正面，几乎没有差别，仔细看的话切换光学和电子取景器的拨钮稍有差异：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/duet-1.jpg&quot; width=&quot;800&quot; alt=&quot;X100S vs. X100 正面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上面红色的“S”字母显示出型号的差异，以及去掉了初代机器展示独特性的文字：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/duet-6.jpg&quot; width=&quot;800&quot; alt=&quot;X100S vs. X100 上面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;右侧面完全一样：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/duet-5.jpg&quot; width=&quot;800&quot; alt=&quot;X100S vs. X100 右侧面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;左侧面的对焦模式选择进行了微调，把连续自动对焦和单张自动对焦换了个位置，这是好改进，因为 AF-S 是最常用的模式，以前不小心碰到这个钮可能推到 AF-C 模式上，会额外的耗电：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/duet-2.jpg&quot; width=&quot;800&quot; alt=&quot;X100S vs. X100 左侧面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;背面的改动最多：右下角有 “MADE IN JAPAN” 字样；原来的 AF 按钮和 Drive 按钮换了一个位置，现在可以右手单手选择对焦点，Drive 本来就不是随时会用的功能；右下角的 RAW 按钮换成了 Q 按钮，用于显示一个 4x4 的 dashboard 来快速切换常用的各种设定（个性设定、ISO、动态范围、白平衡等 16 个）。后两项都是提高操控性的好改进。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;/images/posts/x100s/duet-4.jpg&quot; width=&quot;800&quot; alt=&quot;X100S vs. X100 背面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;除了上列立刻可以看到的改进，稍微把玩了下发现如下改进也不错：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;对焦确实快了很多很多，仅此一项就值得升级。富士这些年在&lt;a href=&quot;http://www.dpreview.com/news/2010/8/5/fujifilmpd&quot;&gt;混合对焦黑科技&lt;/a&gt;上的投资，将以前只有笨重的 DSLR 才有的相位检测自动对焦技术引入到无反光镜的数码相机里，效果显著。&lt;/li&gt;
  &lt;li&gt;电子取景器（EVF）分辨率和显示效果都有比较明显的提升。&lt;/li&gt;
  &lt;li&gt;电子取景器为手动对焦模式增加了电子裂像屏，本来已经很酷很好玩的混合取景器又增加了新玩法，效果不错，以后拍摄微距等需要非常精确聚焦的场合可以用。&lt;/li&gt;
  &lt;li&gt;设定界面进行了不小的调整，以前一些不太合理的地方基本都修正了；增加了开关 Eye-fi 无线传输的选项，可以省不少电。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大致就是这样吧，以后拍了片子再来给大家分享。&lt;/p&gt;
</description>
                <pubDate>Mon, 29 Apr 2013 12:03:00 +0800</pubDate>
                <link>http://cn.soulhacker.me/2013/04/29/fujifilm-x100s/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2013/04/29/fujifilm-x100s/</guid>
                
                <category>Photography</category>
                
                
            </item>
        
            <item>
                <title>从台湾三星写手门看网络营销的底线</title>
                <description>&lt;p&gt;所谓的「台湾三星写手门」，就是前不久被不知名台湾黑客爆出&lt;a href=&quot;http://taiwansamsungleaks.org/&quot;&gt;三星内部邮件&lt;/a&gt;，显示三星在台湾如何雇佣网络水军，运用发布虚假评测、控制论坛舆情等手法抹黑对手（主要是 HTC）抬高自己。此事在台湾掀起了不小的波澜，具体内容可以点击下面的链接查看有人整理好的&lt;a href=&quot;http://home.gamer.com.tw/creationDetail.php?sn=1963795&quot;&gt;懒人包&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;三星不惜重金、不择手段的进行所谓“市场营销”在一定圈子内早已是公开的秘密，只是一般消费者很难完全了解。而这件事里最有趣的问题在于：到底网络（病毒）营销的底线在哪里？每个人都有自己道德和职业准则，我虽然没做过专职的市场营销，但在科技领域创业和工作很多年，下面是我挂一漏万的列表，仅供参考。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;首先是正常的、合法也符合一般道德标准的做法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在保持公司主体清晰的前提下雇请公关公司协助或者进行营销策划及实施&lt;/li&gt;
  &lt;li&gt;通过合法手段搜集民意舆情&lt;/li&gt;
  &lt;li&gt;邀请或雇请社会名人进行产品广告宣传，并明示为广告&lt;/li&gt;
  &lt;li&gt;利用热点事件和自身产品的结合进行宣传&lt;/li&gt;
  &lt;li&gt;针对危机由公司主体出面进行合理、正面的解释及澄清&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;然后是我国普遍存在的灰色地带，个人也较不屑的做法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;雇请水军通过刷版、刷榜、刷票等方式提升产品知名度、打压对手的传播&lt;/li&gt;
  &lt;li&gt;付费或其他方式要求媒体撤稿&lt;/li&gt;
  &lt;li&gt;雇请写手编写具有倾向性的产品评测&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后是红灯区，违法与否需要专业判断，但至少是严重不合商业规则和一般道德准则：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;暗中资助公司主体不出现的营销活动，伪装中立第三方观点来提升自己和/或贬低对手&lt;/li&gt;
  &lt;li&gt;炮制虚假内容或促进传播无根据传闻，达到提升自己和/或贬低对手的目的&lt;/li&gt;
  &lt;li&gt;在当事人不知情的情况下设计利用热点人物和事件进行商业营销（典型的案例如三星与台湾三太子的事件）&lt;/li&gt;
  &lt;li&gt;通过欺骗和要挟迫使独立媒体进行倾向于自己的报道（典型案例如 IFA 2012 上三星与几名独立科技博客作者之间的事件）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p.s. 三星是家非常独特的公司，作为人均 GDP 数倍于我国的发达国家的头号企业，其商业和道德底线大有完胜我国众高段选手的架势，真是令人叹为观止。&lt;/p&gt;

&lt;p&gt;– &lt;br /&gt;
本文原发于微信公众帐号「Paradigm X」，它会围绕科技极客世界的新鲜话题不定期发布原创短评。 &lt;br /&gt;
获得每天更新：请在微信 app 中搜索「Paradigm X」或加 ID：ParadigmX 或扫描以下二维码：&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;left&quot; src=&quot;/images/paradigmx-weixin-qrcode.jpg&quot; width=&quot;129&quot; height=&quot;129&quot; alt=&quot;Paradigm X QR Code&quot; /&gt;&lt;/p&gt;
</description>
                <pubDate>Sat, 20 Apr 2013 15:18:00 +0800</pubDate>
                <link>http://cn.soulhacker.me/2013/04/20/bottom-line-of-viral-marketing/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2013/04/20/bottom-line-of-viral-marketing/</guid>
                
                <category>Internet</category>
                
                
            </item>
        
            <item>
                <title>关于数码摄影的预言</title>
                <description>&lt;p&gt;下面是我对于数码摄影未来的预言，可能会随着时间的推移添加一些内容，但不会修改已经发布的内容。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;胶片在很长的时间里都不会消失，但没有什么力量能扭转其逐渐萎缩的趋势。&lt;/li&gt;
  &lt;li&gt;反光镜作为胶片时代的特色，将逐步从数码相机中消失，SLR&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; 会被 SLT&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;、MIRC&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; 或类似系统取代，但传统相机厂商的顽固性会让这个过程很漫长。&lt;/li&gt;
  &lt;li&gt;大尺寸感光元件&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;将很快成为主流配置，而更小感光元件对应的袖珍数码相机&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;市场份额会被智能手机蚕食，在 5-10 年之后基本消失。&lt;/li&gt;
  &lt;li&gt;全幅感光元件不再是 SLR 的专利，未来 2 年各类数码相机的顶级型号都将配备全幅感光元件，其价格将加速下降。&lt;/li&gt;
  &lt;li&gt;未来 2 年中越来越多的数码相机将内置 WiFi 支持，从而实现和智能手机以及其他数字设备之间方便地互操作，SONY 在其 NEX-6 和 5R 中展现的手机遥控拍摄和照片无线上传、同步、播放能力早该普及。&lt;/li&gt;
  &lt;li&gt;未来 3-5 年中越来越多的数码相机将支持 geotagging，可能借助内置的 GPS 芯片，或者借助与相机配对的智能手机或者其他电子设备。&lt;/li&gt;
  &lt;li&gt;Android 相机在很长时间里都很难找准定位，不会取得很大成功。&lt;/li&gt;
  &lt;li&gt;在更长的时间跨度上（比如 10 年），数码摄影会进一步实现专业工具的平民化，无论是高质量的照片集，还是高质量的微电影，借助各种降低它们创作门槛的硬软件工具，都会越来越普及。&lt;/li&gt;
  &lt;li&gt;数码摄影的创新才刚刚开始，传统摄影技术一边进行着局部渐进式改良，一边也在等待全新创造物的降临，类似 Lytro 的光场（light field）相机这样的技术仅仅是个序幕。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;p&gt;–&lt;/p&gt;

&lt;p&gt;本文原发于微信公众帐号「Paradigm X」，它会围绕科技极客世界的新鲜话题不定期发布原创短评。 &lt;br /&gt;
获得每天更新：请在微信 app 中搜索「Paradigm X」或加 ID：ParadigmX 或扫描以下二维码：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paradigmx-weixin-qrcode.jpg&quot; width=&quot;129&quot; height=&quot;129&quot; alt=&quot;Paradigm X QR Code&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;strong&gt;单镜头反光相机（Single-Lens Reflex cameras，SLR）&lt;/strong&gt;：有一个可以升起和放下的反光镜，借助它和五棱镜光学取景器实现一个镜头完成取景和拍摄的双重任务。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;strong&gt;单镜头半透反光镜相机（Single-Lens Translucent cameras，SLT）&lt;/strong&gt;，有一个固定不动的半透明反光镜，通过电子取景器（EVF）取景，半透明反光镜的作用主要是实现类似 SLR 的相位对焦。这是 SONY 的专利技术，所以此类别目前只包括 SONY 的 Alpha 系列数码相机。和 SLR 相比较小较轻，连拍速度也更快，但是非常耗电。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;strong&gt;无反光镜可换镜头相机（Mirrorless InterChangeable-lens Camera，MIRC）&lt;/strong&gt;：完全不使用任何反光镜，使用 EVF 取景，可换镜头，比 SLT 更加小巧；由于没有反光镜，通常采用反差对焦方式，自动对焦的精确度、速度和适应度都较差，但富士（Fujifilm）2010 年公布的 F300EXR 数码相机搭载了一种同时支持相位对焦和反差对焦的混合自动对焦系统，由 CCD 芯片和对应的图像处理芯片协作完成，能够在无反光镜的拍摄系统中实现高速的自动对焦，目前已经应用在富士、理光、尼康、佳能的某些机型中。 &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;strong&gt;大尺寸感光元件&lt;/strong&gt;：全幅（36x24mm）、APS-C（25.1x16.7mm）、MFT 即 3/4 系统（17.3x13.0mm）。 &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;&lt;strong&gt;袖珍相机（Compact cameras）&lt;/strong&gt;：所有不可换镜头的数码相机，还可依不同维度细分为大感光元件和小感光元件，全操控和傻瓜式，类 SLR 和卡片式等小类。 &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <pubDate>Wed, 10 Apr 2013 14:03:00 +0800</pubDate>
                <link>http://cn.soulhacker.me/2013/04/10/prophecy-of-digital-photography/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2013/04/10/prophecy-of-digital-photography/</guid>
                
                <category>Photography</category>
                
                
            </item>
        
            <item>
                <title>谈谈“专业化”</title>
                <description>&lt;p&gt;这个话题源自老罗（罗永浩）和他的团队基于 Android 开发的 Smartisan OS 软件，或者说来自一位朋友在微博和 Twitter 上对其 3 月 27 日发布会的评论（收到了相当猛烈的反应呢）：&lt;/p&gt;

&lt;figure class=&quot;quote&quot;&gt;&lt;blockquote&gt;&lt;p&gt;来说下为什么我今天这么用力吐槽老“锤子”。我觉得“锤子”关注者一大批是希望看到一个外行来抽专业人士的耳光的心态而支持老罗的，这种“不尊重专业”的态度是这个民族自本国沦陷以来一直没有改掉的陋习。我并不觉得这样的风气应该继续提倡，而好在今天没有让我失望，专业的事情还是交给专业的人做吧。&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;quote-source&quot;&gt;&lt;span class=&quot;quote-author&quot;&gt;&lt;a class=&quot;quote-link&quot; href=&quot;https://twitter.com/GossipSama/status/316920394110103552&quot;&gt;Tweet from @GossipSama&lt;/a&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;转天虎嗅网发了一篇题为“&lt;a href=&quot;http://www.huxiu.com/article/12124/1.html&quot;&gt;锤子现场速写：他不贱，只是矫情&lt;/a&gt;”的文章，里面提到了另外一个很有意思的概念“对技术的敬畏”：&lt;/p&gt;

&lt;figure class=&quot;quote&quot;&gt;&lt;blockquote&gt;&lt;p&gt;老罗在谈到对语音功能的看法时，让笔者史无前例的第一次开始怀疑老罗对技术的理解。尽管老罗敢招七个人就做手机 OS（谁说七个人就做不出来？），尽管老罗之前是教英语的（他说自己之前也卖过电脑，算 IT 人）。但是老罗认为，像 Siri 这样的语音交互产品，作为“人工小秘书”来讲，“从根本上就错了”，“人工智能不可能达到那种程度”。&lt;/p&gt;

&lt;p&gt;先不说 Siri 是否就是一个“人工小秘书”，活在科技时代的人或许应该有一个共识，那就是永远对技术的未来充满敬畏。你永远不知道明天会发生什么，永远不要对科技盖棺定论，老罗推崇的乔布斯也不会这样做。&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;quote-source&quot;&gt;&lt;span class=&quot;quote-author&quot;&gt;&lt;a class=&quot;quote-link&quot; href=&quot;http://www.huxiu.com/article/12124/1.html&quot;&gt;锤子现场速写：他不贱，只是矫情 | 虎嗅网&lt;/a&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;“专业的事交给专业的人去做”以及“对技术的未来保持敬畏”其实是一脉相承的观念，都是我非常认同的，但我也深知它们都是很容易被误读或者误解的观点，值得跳出 140 个字的框框多写点东西。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;首先我们来看看，什么是叫专业化。在维基百科英文版上有 &lt;a href=&quot;http://en.wikipedia.org/wiki/Professionalization&quot;&gt;Professionalization&lt;/a&gt; 这一词条（中文版尚无），第一段解释本身就不短，而且里面还有多达 8 个脚注以及 9 个转向其他词条的链接，说明这并不是一个易于定义的基本概念。我们来把它稍微简化和分解一下，经过思考可以得到以下的认识：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;专业化是逐步区分开“专业”和“业余”的一个过程，而“专业”和“业余”的主要差别是在特定领域投入的时间和专注度，这是一个量的积累差异而非质的差异。&lt;/li&gt;
  &lt;li&gt;专业化是一个社会化过程，有时候专业和业余之间并没有非常清晰的界限，这就好比围棋里业余高段选手棋力大致和职业初段相当，具体界限的划分需要依靠领域内建立的一套民主机制来定义，同样类比围棋的话，就是确定段位等级的一套办法。&lt;/li&gt;
  &lt;li&gt;专业是针对特定领域的，越专就越难广博，一个领域的专业人士可能对其他领域一无所知，就像夏洛克・福尔摩斯不知道地球围着太阳转；另一方面，某些领域比较为大众所关注，而另一些领域未必，这决定了同样付出的前提下，有些专业人士会比其他的专业人士更引入瞩目。&lt;/li&gt;
  &lt;li&gt;专业化是和知识以及技能体系密不可分的，不同领域的知识和技能积累程度不同，专业化程度也是很不一样的。一般来说，越是成熟、历史悠久的领域，积累的知识和技能越是深入，往往细分为多个分支，其专业化程度也就越高。&lt;/li&gt;
  &lt;li&gt;某个领域的知识和技能演进到一定程度，其专业门槛又会表现出某种下降趋势，其根本原因是位于领域金字塔顶端的专业人士开始把知识和技能封装成工具和流程，使得不具备很高专业水准的人可以借助这些工具和流程完成原本需要更高专业水准才能完成的工作。这实际上是专业化的进一步发展，也是以分工协同为特征的社会化大生产的基石；另一方面，金字塔顶端的专业人士也不断提升领域的教育能力，用更有效的教育来培养更多的各级专业人士。这是所有领域的发展规律，如果无法建立这样的正向循环，这个领域只会慢慢衰亡。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这些认识的基础上，我们可以理解，为什么在消费电子和智能手机这样既年轻又大众化的领域，会出现格外热烈的种种争论：本身很新并且融合了很多不同领域（也就是说，对里面某个领域多少有些接触了解的人多得很），同时又是大多数人亲身体验和接触的东西（没吃过猪肉还没见过猪跑？）。这里面误解很多，我们下面就列举一些最典型的。&lt;/p&gt;

&lt;h3&gt;误解一：“职业即专业”&lt;/h3&gt;

&lt;p&gt;专业不等于职业，虽然大多数领域里不作为职业的专业人士比较少见，但是确实也存在，比如在美国就有过例子，一位家庭主妇闲来无事花费数年钻研二维堆叠问题，取得的一些成果是职业数学家都未曾得到的；职业也不等于专业，比如以程序员为终生职业的人多如牛毛，但多数最多只能算入门，离这个领域的专业要求相去甚远。&lt;a href=&quot;https://twitter.com/GossipSama&quot;&gt;@GossipSama&lt;/a&gt; 有一则推生动的说明了这个差异：&lt;/p&gt;

&lt;figure class=&quot;quote&quot;&gt;&lt;blockquote&gt;&lt;p&gt;专业不是专科，而是对一个领域经年的不断投入、学习、总结、自我检讨、自我改进。其中，时间成本就很重要，这个世界有天才，但是依然有很多东西需要时间的投入去历练。就像以前的生煎包好吃是因为以前的师傅 20 年 30 年一直在做生煎包，而现在的生煎包师傅可能做了几年就转行了。&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;quote-source&quot;&gt;&lt;span class=&quot;quote-author&quot;&gt;&lt;a class=&quot;quote-link&quot; href=&quot;https://twitter.com/GossipSama/status/316924908124897280&quot;&gt;Tweet from @GossipSama&lt;/a&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;计算机这个领域目前还在很幼年的阶段，发展演变迅速，知识和技能的累积很快，但归纳和体系化是滞后的，使得学习成长不得不依靠大量实践和前辈的言传身教，悟性和投入时间缺一不可，悟性差点，有好的带头人和足够的时间投入还可以弥补，而没有投入足够时间的团队（包括他们在加入这个团队之前的积累）基本很难成事&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。如果不信的话可以自己设想一下下面这个问题，一个没有相关经验的团队要花多少时间建立一个靠谱的解决方案：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;一个 Android ROM 或者 launcher 或者随便什么 app 要支持多种机型，在发布之前应该在所有自己声称支持的机型上进行测试，这包含了多个小团队开发的多个软件组件，他们之间有依赖关系，某个组件更新需要对所有受到影响的部分重复已经做过的所有测试，测试在多个设备上进行，如何自动化这些测试来提高效率？如何根据测试结果协调各个小组的进度面向一致的目标里程碑进行工作？&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;对了，这类问题一点也不特殊，在软件开发过程中遍地都是，愁得老板们最后只好认输，把没有经过完整测试的软件扔出去然后把头埋进沙子里假装听不见用户的吐槽——我相信砸过西门子冰箱的老罗一定不齿于这么干。&lt;/p&gt;

&lt;h3&gt;误解二：“专业无用”&lt;/h3&gt;

&lt;blockquote&gt;&lt;p&gt;“专业有什么了不起的，王侯将相宁有种乎！”&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;别笑，这是真有人在新浪微博回应本文开头的评论的话。历史上最早说“王侯将相宁有种乎”的人的本意，除了朴素的“人人生而平等”的民主观外，还蕴含着一种“我经过努力可以做和你一样的事，而且比你做的更好”的雄心和自信，如果这件事不需要长时间的学习、思考、训练和积累的话，雄心、自信加上天赋基本可以解决问题——那时候适逢末世，王侯将相们倒也确实不需要什么特殊技能和知识。治国事大，我说不上来什么规律，但具体到智能手机这件事，一般我们会将其生态环境（其实整个计算机行业都类似）划分为四层：核心硬件、平台（操作系统+开发环境+应用商店）、系统集成、软件及服务，这个行业的历史和规律告诉我们：这里面前两层都需要相对很长时间的积累才能跨过门槛，然后还需要绝佳的时机和运气才能建立竞争优势；系统集成包括将核心硬件组合成消费者产品，以及对标准软硬件的适配和定制，门槛相对稍低；软件和服务的范围很广，差异很大，有的非常难做好，有的相对容易很多，就不展开说了。&lt;/p&gt;

&lt;p&gt;那么我们来看看老罗和他的团队做的这个东西算什么。其官方称之为“Smartisan OS based on Android”，似乎是定位为基于 Android 源代码改的操作系统，实际上根据发布会披露的信息，目前阶段还完全没有碰到操作系统和软硬件集成的部分，所有功能都通过上层软件的修改即可实现，也就是大家习惯说的“第三方 launcher”，基本上算整个生态环境里技术门槛最低的环节之一，也就是说老罗选了一个并非不可能的任务——但是（这个但是可要用力的说出来），这仍不简单，原因如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;手机和传统的桌面计算机不一样，涉众更广，用户涵盖了知识背景完全不同的人群，其中很多人完全没有使用计算机和互联网的经验和常识。&lt;/li&gt;
  &lt;li&gt;目前智能手机市场基本没有超出 Apple 在 2007 年规划的格局，而这是一家以用户集成体验为主要卖点的公司。&lt;/li&gt;
  &lt;li&gt;Android 系统里 launcher 作为交互入口是用户体验里很关键的环节，既要避开系统本身固有的各种问题（比如操作系统和各种硬件的适配问题），有时还要替设计不佳的 app 的错误买单。&lt;/li&gt;
  &lt;li&gt;Android 市场现状和第三方 launcher 的特点决定了其（几乎）唯一有效的推广渠道就是预装（和硬件集成厂商以及运营商合作），而这是一个初始成本要求较高的渠道。&lt;/li&gt;
  &lt;li&gt;第三方 launcher 并非创新，而是已经充分竞争的领域，现在进入需要有非常大的差异化才有可能建立市场口碑，进而降低推广成本，而这些差异化可能必须从不那么容易实现的细分领域入手。老罗半开玩笑的说被 MIUI 当初六个人的团队规模误导，不知道他是不是明白，这就是进入时机的差异导致的必然。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;除了这些市场上的、非常难改变的客观环境以外，做 launcher 的门槛是拼用户体验，而拼用户体验本质上是拼用户数量和对用户的了解，这里有个小例子可能有助理解：MIUI 新版有个很有意思的小功能，给联系人里没有设置头像的人根据 TA 的姓名，取最后一个字作为头像，如果最后一个字是“哥”“姐”“叔”之类的，则会用其前面一个字。这不是什么了不起的创新，但为什么这么晚才加入到功能集里呢？因为这是很细分的用户需求，能想到就不易，我想这和 MIUI 的用户积累应该是有很大关系的，而一个新进入市场的 player 能一开始就在这种层面和诸如 MIUI 这样的用户积累竞争吗？我个人是非常怀疑的，并不是不可能竞争，而是必须要付出数倍的投入和努力才可以，人家也不会坐在那里等你嘛。&lt;/p&gt;

&lt;p&gt;除了用户体验，还有技术问题。时时听到有人说：“技术不是问题”，这就好比说“凡是钱能解决的都不是问题”，这话在且仅在钱足够多的情况下才成立，而技术问题也仅在团队技术能力达标的前提下才不是问题，在智能手机这个领域，这个技术能力的标杆可以用 CyanogenMod 和 MIUI 的团队来衡量，国内能达到这标杆水准的团队一只手就能数完。&lt;/p&gt;

&lt;h3&gt;误解三：“专家？砖家吧”&lt;/h3&gt;

&lt;p&gt;其实我是在大专院校里长大的，非常了解国内科技领域的专业人士是怎么一代一代的沦落到现在这境地的，几十年缺乏创新的学术环境也难怪大家失去了“对技术的敬畏”。但我始终是个（谨慎的）乐观主义者，相信只要时间足够长，每个人都会明白那些短视的、自私的行为是于人于己有害的，慢慢回到一个比较健康的环境来，其实也不复杂，就是每个人在自己认为自己比较专业的领域多较真，肯花点时间去传播自己认为正确的观点认识，愿意与人在逻辑的基础上讨论和争论，就行了。&lt;/p&gt;

&lt;p&gt;另外，凡事都有两面，除了一些被利益驱动为金钱背书的恶劣行径，很多被民众嘲讽的“砖家言论”从某种角度看还是有其来由的，只不过在对应的具体问题上显得脱离实际罢了&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;，这在全世界都并不鲜见，对这些有问题的认知，应该基于科学方法来进行驳斥，即基于事实证据、可重复试验以及形式逻辑体系，有针对性的提出异见。专业人士会有胡说八道的时候，但这并不是否定所有专业判断的理由，如果据此来决定自己的判断，岂不是陷入了另一种对专家的盲信？&lt;/p&gt;

&lt;p&gt;另外，前面也提到了计算机这个领域目前还处在幼年期，是半理论半实践的状态，理论还在追赶实践的步伐，这个领域真正的专业人士不太容易犯脱离实际的错误，只是近年这个领域也出现了不少江湖骗子（包括一些内心强大到连自己也骗倒的），如何识别他们是个挑战。&lt;/p&gt;

&lt;h3&gt;误解四：“站在巨人的肩膀上”&lt;/h3&gt;

&lt;p&gt;很多流行语都有这个意味，比如“弯道超车”，颇有大跃进时期赶英超美的气势。这样的事情并非完全不可能，但一切要回到“客观规律”的分析上来。站在巨人的肩膀上确实可以前进的更快，但这程度远不如人们想象的那么显著。目前的智能手机领域，巨人们提供了这样一些肩膀：iPhone 和 iOS 建立的移动应用模式，开源的 Android 操作系统，智能手机高速发展的市场趋势，一大批成长中的相关人才，问题是爬上这些肩膀并站稳并不是那么简单的事情。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;也许能模仿 iPhone 的设计，但对很多设计细节并不知道为什么要这么设计，也不知道在最后呈现出这些设计之前 Apple 内部毙掉了多少其他方案以及为什么&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;，要搞明白这一切，时间是要付出的必要成本，Google 和 Microsoft 的团队都能告诉你那时间也没比 Apple 少花多少。&lt;/li&gt;
  &lt;li&gt;通用操作系统是软件系统里复杂度最高的几个类别之一，iOS 也好，Android 和 WP 也好，都不是什么久经考验坚若磐石的软件系统（当然他们确实借助了某些久经考验坚若磐石的基础软件代码），他们都在快速的迭代和改进中，里面的技术陷阱多到令人发指的程度，在省下自己编写基础框架的工作量同时，也带来持续学习和摸索的工作量，即使在今天惊人的互联网节奏下，也不是几个月就能趟过的浅滩。&lt;/li&gt;
  &lt;li&gt;各种专利保护为简单复制增加了很多成本，而用户的个性化需求也不鼓励雷同。&lt;/li&gt;
  &lt;li&gt;快速发展的市场吸引了全球所有第一流的公司以巨大的投入参与进来，市场成本和风险对小的创业者来说都不可小视。&lt;/li&gt;
  &lt;li&gt;和几年前相比，智能手机相关的硬软件工程人员、产品设计人员等都有大幅增加，但和人才市场的需求相比，仍然处在供不应求的状态，尤其是经验丰富、具备管理、产品和技术交叉技能的良才，市场价格仍在攀升，这个竞争带来的成本压力不亚于市场上的产品竞争，不幸的是，到目前为止，老罗的团队里并没有这些领域的一流人才。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;再说一次：做智能机比以前容易多了，但仍然是有相当门槛的，尤其当你面对的是 Apple、Google、Samsung、华为、魅族这样一些各怀绝技的对手时；做 ROM 或者 launcher，MIUI、FlyOS 和 Go 也都不简单。客观的说，老罗有些创意是不错的，至少是有个性有想法，也有市场的，但团队必须具有不亚于这些对手的综合实力才能把创意变成用户满意的体验。好好花时间建立和磨练好团队，做好持久战的准备，才是这个领域的成功之道。&lt;/p&gt;

&lt;h3&gt;番外：预言&lt;/h3&gt;

&lt;p&gt;有朋友看了初稿之后预言说：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;很多人看完第一句之后，他们最想知道的答案是你到底是罗粉还是罗黑，然后，他们就会直接拉到最后一段，结果看完还是没明白…于是就条件反射的按照自己看完的直觉理解一下，结果一半人在评论里面骂你罗粉，另外一半人在评论里面骂你罗黑……&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;特补充立次为证 -_-&lt;/p&gt;

&lt;p&gt;–&lt;/p&gt;

&lt;p&gt;本文原发于微信公众帐号「Paradigm X」，它会围绕科技极客世界的新鲜话题不定期发布原创短评。 &lt;br /&gt;
获得每天更新：请在微信 app 中搜索「Paradigm X」或加 ID：ParadigmX 或扫描以下二维码：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/paradigmx-weixin-qrcode.jpg&quot; width=&quot;129&quot; height=&quot;129&quot; alt=&quot;Paradigm X QR Code&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;所以专业化的团队特别值钱，而有积累的重复创业团队比较容易得到投资人的信任，这也是重要原因之一。 &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;即使孔乙己卖弄的“茴”字的四种写法，在某些领域也不完全是无用的知识。 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;这其实就是臭名昭著的“像素级克隆”模式的理论依据：如果不完美的克隆每个像素，哪怕稍微改动一点也许就正好是个失败方案（笑）。 &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
                <pubDate>Mon, 08 Apr 2013 23:17:00 +0800</pubDate>
                <link>http://cn.soulhacker.me/2013/04/08/talk-about-pro/</link>
                <guid isPermaLink="true">http://cn.soulhacker.me/2013/04/08/talk-about-pro/</guid>
                
                <category>Internet</category>
                
                
            </item>
        
    </channel>
</rss>